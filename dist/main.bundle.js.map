{"version":3,"sources":["C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/$_gendir lazy","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.module.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.routing.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/account/account.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/account/account.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/account/account.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/alert/alert.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/alert/alert.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companies/companies.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companies/companies.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companies/companies.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyEdit/companyEdit.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyEdit/companyEdit.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyEdit/companyEdit.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyNew/companyNew.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyNew/companyNew.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyNew/companyNew.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsers/companyUsers.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsers/companyUsers.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsers/companyUsers.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersEdit/companyUsersEdit.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersEdit/companyUsersEdit.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersEdit/companyUsersEdit.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersList/companyUsersList.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersList/companyUsersList.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersList/companyUsersList.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersNew/companyUsersNew.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersNew/companyUsersNew.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersNew/companyUsersNew.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/dashboard/dashboard.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/dashboard/dashboard.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/dashboard/dashboard.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/documentList/document-alert.dialog.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/documentList/documentList.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/documentList/documentList.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeEdit/employeeEdit.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeEdit/employeeEdit.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeEdit/employeeEdit.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeNew/employeeNew.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeNew/employeeNew.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeNew/employeeNew.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employees/employees.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employees/employees.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeesList/employeesList.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeesList/employeesList.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeesList/employeesList.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/fileupload.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/fileupload.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/login/login-alert.dialog.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/login/login.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/login/login.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/login/login.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/companyAdmin/company-admin.navbar.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/companyAdmin/company-admin.navbar.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/companyAdmin/company-admin.navbar.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/globalAdmin/global-admin.navbar.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/globalAdmin/global-admin.navbar.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/globalAdmin/global-admin.navbar.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/user/user.navbar.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/user/user.navbar.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/user/user.navbar.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/notfound/notfound.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/notfound/notfound.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/timesheet/timesheet.component.css","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/timesheet/timesheet.component.html","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/timesheet/timesheet.component.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/company.model.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/companyUser.model.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/file.model.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/states.models.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/user.model.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/usertype.models.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/pipes/list-filter.pipe.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/auth.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/authguard.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/company.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/companyUser.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/documents.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/employee.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/settings.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/upload.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/user.service.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/environments/environment.ts","C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar{\\r\\n    background-color: #2cbbc3;\\r\\n    padding: 5px\\r\\n}\\r\\n\\r\\n.sidenav{\\r\\n  float:left;\\r\\n    padding: 5px;\\r\\n    height: 100vh;\\r\\n    min-width:210px;\\r\\n    width:11%;\\r\\n    background-color: #eeeeee;\\r\\n    border-right: 1px solid grey;\\r\\n}\\r\\n\\r\\na {\\r\\n    padding: 5px 10px;\\r\\n    text-decoration: none;\\r\\n    margin-top: 10px;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  a:visited, a:link {\\r\\n    color: #607D8B;\\r\\n  }\\r\\n  a:hover {\\r\\n    color: #039be5;\\r\\n    background-color: #CFD8DC;\\r\\n  }\\r\\n  a.active {\\r\\n    color: #039be5;\\r\\n  }\\r\\n  \\r\\n  .content {\\r\\n      width: 75%;\\r\\n      margin: 0 auto;\\r\\n  }\\r\\n\\r\\n\\r\\n  .mat-form-field{\\r\\n    width:400px\\r\\n  }\\r\\n\\r\\n.example-sidenav-fab-container md-sidenav {\\r\\n  max-width: 200px;\\r\\n}\\r\\n\\r\\n.example-sidenav-fab-container .mat-sidenav-content,\\r\\n.example-sidenav-fab-container md-sidenav {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.example-scrolling-content {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.example-fab {\\r\\n  position: absolute;\\r\\n  right: 20px;\\r\\n  bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.example-container {\\r\\n  width: 500px;\\r\\n  height: 300px;\\r\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-sidenav-content {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  -webkit-box-align: center;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n  -webkit-box-pack: center;\\r\\n      -ms-flex-pack: center;\\r\\n          justify-content: center;\\r\\n}\\r\\n\\r\\n.example-sidenav {\\r\\n  padding: 20px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div>\\r\\n  <div class=\\\"mobileHeaderTitle centerText\\\" *ngIf=\\\"user\\\">\\r\\n    <img style=\\\"max-height:60px; position:absolute;left:12%\\\" src=\\\"../assets/images/Nomi_Sign-12-1-1.png\\\" class=\\\"mobileHeaderLogo\\\"/>\\r\\n    <h1 style=\\\"line-height:50px\\\" class=\\\"mobileHeaderText\\\"> Admin Page</h1>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"user\\\">\\r\\n    <global-admin-navbar *ngIf=\\\"user.UserType === 3\\\"></global-admin-navbar>\\r\\n    <company-admin-navbar *ngIf=\\\"user.UserType === 2\\\"></company-admin-navbar>\\r\\n    <user-navbar *ngIf=\\\"user.UserType === 1\\\"></user-navbar>\\r\\n  </div>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { UserService } from './services/user.service'\r\nimport { SettingsService } from './services/settings.service'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [SettingsService ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title :string;\r\n  url = this.router.url\r\n  appName: string\r\n  user : any\r\n\r\n  constructor(private router: Router, private settingsService: SettingsService, private userService: UserService) {\r\n    settingsService.getSystemSettings().subscribe(data => this.appName = data[0].ProductName)\r\n    this.getCurrentUser()\r\n    userService.userUpdated.subscribe(value => {\r\n      this.getCurrentUser()\r\n    })\r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  getCurrentUser(){\r\n    let user = this.userService.getUser()\r\n    if (user){\r\n      this.user = user;\r\n    }  \r\n    else{\r\n      this.user = null\r\n    }\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title\r\n  }\r\n\r\n\r\n  logout(){\r\n    this.userService.clearUser();\r\n    this.user = null;\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.component.ts","//angular imports\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router';\r\n//angular material\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatCheckboxModule, MatInputModule, MatSidenavModule, MatCardModule, MatListModule, MatIconModule, MatSelectModule, MatToolbarModule, MatMenuModule, MatSnackBarModule, MatDialogModule, MatProgressSpinnerModule } from '@angular/material';\r\n//custom imports\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { LoginComponent } from './components/login/login.component'\r\nimport { AccountComponent } from './components/account/account.component'\r\nimport { EmployeesComponent } from './components/employee/employees/employees.component'\r\nimport { CompaniesComponent } from './components/company/companies/companies.component'\r\nimport { TimesheetComponent } from './components/timesheet/timesheet.component'\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component'\r\nimport { NotFoundComponent } from './components/notfound/notfound.component'\r\nimport { CompanyEditComponent } from './components/company/companyEdit/companyEdit.component'\r\nimport { CompanyNewComponent } from './components/company/companyNew/companyNew.component'\r\nimport { EmployeesListComponent } from './components/employee/employeesList/employeesList.component'\r\nimport { EmployeeEditComponent } from './components/employee/employeeEdit/employeeEdit.component'\r\nimport { EmployeeNewComponent } from './components/employee/employeeNew/employeeNew.component'\r\nimport { AlertComponent } from './components/alert/alert.component'\r\nimport { CompanyUsersComponent } from './components/companyuser/companyUsers/companyUsers.component'\r\nimport { CompanyUsersListComponent } from './components/companyuser/companyUsersList/companyUsersList.component'\r\nimport { CompanyUsersEditComponent } from './components/companyuser/companyUsersEdit/companyUsersEdit.component'\r\nimport { CompanyUsersNewComponent } from './components/companyuser/companyUsersNew/companyUsersNew.component'\r\nimport { LoginAlertDialog } from './components/login/login.component'\r\nimport { RefusedDocumentAlertDialog } from './components/documentList/documentList.component'\r\nimport { GlobalAdminNavbarComponent } from './components/navbars/globalAdmin/global-admin.navbar.component'\r\nimport { DocumentListComponent } from './components/documentList/documentList.component'\r\nimport { CompanyAdminNavbarComponent } from './components/navbars/companyAdmin/company-admin.navbar.component'\r\nimport { UserNavbarComponent } from './components/navbars/user/user.navbar.component'\r\nimport { InputFile } from './components/fileupload.component' \r\n\r\nimport { UserService } from './services/user.service'\r\nimport { AuthService } from './services/auth.service'\r\nimport { UploadService } from './services/upload.service'\r\nimport { DocumentService } from './services/documents.service'\r\nimport { CAdminAuthGuard, GAdminAuthGuard, UserAuthGuard } from './services/authguard.service'\r\n\r\nimport { ListFilterPipe } from './pipes/list-filter.pipe'\r\n\r\nimport { AppRoutingModule } from './app.routing'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeesComponent,\r\n    CompaniesComponent,\r\n    TimesheetComponent,\r\n    DashboardComponent,\r\n    DocumentListComponent,\r\n    NotFoundComponent,\r\n    CompanyEditComponent,\r\n    CompanyNewComponent,\r\n    EmployeesListComponent,\r\n    EmployeeEditComponent,\r\n    EmployeeNewComponent,\r\n    LoginComponent,\r\n    AlertComponent,\r\n    CompanyUsersComponent,\r\n    CompanyUsersListComponent,\r\n    CompanyUsersEditComponent,\r\n    CompanyUsersNewComponent,\r\n    LoginAlertDialog,\r\n    RefusedDocumentAlertDialog,\r\n    ListFilterPipe,\r\n    GlobalAdminNavbarComponent,\r\n    CompanyAdminNavbarComponent,\r\n    UserNavbarComponent,\r\n    AccountComponent,\r\n    InputFile\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    AppRoutingModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [ UserService, AuthService, CAdminAuthGuard, GAdminAuthGuard, UserAuthGuard, UploadService, DocumentService ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [LoginAlertDialog, RefusedDocumentAlertDialog ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.module.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AccountComponent } from './components/account/account.component'\r\nimport { LoginComponent } from './components/login/login.component'\r\nimport { EmployeesComponent } from './components/employee/employees/employees.component'\r\nimport { CompaniesComponent } from './components/company/companies/companies.component'\r\nimport { TimesheetComponent } from './components/timesheet/timesheet.component'\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component'\r\nimport { NotFoundComponent } from './components/notfound/notfound.component'\r\nimport { CompanyEditComponent } from './components/company/companyEdit/companyEdit.component'\r\nimport { CompanyNewComponent } from './components/company/companyNew/companyNew.component'\r\nimport { EmployeesListComponent } from './components/employee/employeesList/employeesList.component'\r\nimport { EmployeeEditComponent } from './components/employee/employeeEdit/employeeEdit.component'\r\nimport { EmployeeNewComponent } from './components/employee/employeeNew/employeeNew.component'\r\nimport { CompanyUsersComponent } from './components/companyuser/companyUsers/companyUsers.component'\r\nimport { CompanyUsersListComponent } from './components/companyuser/companyUsersList/companyUsersList.component'\r\nimport { DocumentListComponent } from './components/documentList/documentList.component'\r\nimport { CompanyUsersEditComponent } from './components/companyuser/companyUsersEdit/companyUsersEdit.component'\r\nimport { CompanyUsersNewComponent } from './components/companyuser/companyUsersNew/companyUsersNew.component'\r\nimport { CAdminAuthGuard, GAdminAuthGuard, UserAuthGuard } from './services/authguard.service'\r\n\r\nconst routes: Routes = [\r\n  { path: 'account/:eid', component: AccountComponent },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  //{ path: 'account/:uid', redirectTo: '/account/:uid', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'employees', component: EmployeesComponent, canActivate: [UserAuthGuard] },\r\n  { path: 'companies', component: CompaniesComponent, canActivate: [GAdminAuthGuard] },\r\n  // { path: 'timesheet', component: TimesheetComponent, canActivate: [UAuthGuard] },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [GAdminAuthGuard] },\r\n  { path: 'companyEdit/:cid', component: CompanyEditComponent, canActivate: [CAdminAuthGuard] },\r\n  { path: 'companyNew', component: CompanyNewComponent, canActivate: [GAdminAuthGuard] },\r\n  { path: 'employeesList/:cid', component: EmployeesListComponent, canActivate: [UserAuthGuard] },\r\n  { path: 'employeeEdit/:cid/:eid', component: EmployeeEditComponent, canActivate: [UserAuthGuard] },\r\n  { path: 'employeeNew/:cid', component: EmployeeNewComponent, canActivate: [UserAuthGuard] },\r\n  { path: 'companyusers', component: CompanyUsersComponent, canActivate: [GAdminAuthGuard] }, //change\r\n  { path: 'companyusers/:cid', component: CompanyUsersListComponent, canActivate: [CAdminAuthGuard] },\r\n  { path: 'companyuser/:cid/:cuid', component: CompanyUsersEditComponent, canActivate: [CAdminAuthGuard] },\r\n  { path: 'companyuserNew/:cid', component: CompanyUsersNewComponent, canActivate: [CAdminAuthGuard] }, //change\r\n  { path: 'documentUnapprovedList/:sts/:cid', component: DocumentListComponent, canActivate: [UserAuthGuard] },\r\n  { path: 'documentRejectList/:sts/:cid', component: DocumentListComponent, canActivate: [UserAuthGuard] },\r\n  { path: '**', component: NotFoundComponent }\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/app.routing.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/account/account.component.css\n// module id = ../../../../../src/app/components/account/account.component.css\n// module chunks = main","module.exports = \"Account Info\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/account/account.component.html\n// module id = ../../../../../src/app/components/account/account.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n//import { AlertComponent } from '../alert/alert.component'\r\n\r\nimport { SettingsService } from '../../services/settings.service'\r\n\r\n//angular material imports\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Component({\r\n  selector: 'ng-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  //systemSettings\r\n  //isPromiseDone: boolean = false\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  constructor() {\r\n\r\n   }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/account/account.component.ts","module.exports = \"test\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/alert/alert.component.html\n// module id = ../../../../../src/app/components/alert/alert.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ng-alert',\r\n    templateUrl: './alert.component.html',\r\n    //styleUrls: ['./alert.component.css']\r\n})\r\nexport class AlertComponent{}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/alert/alert.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companies/companies.component.css\n// module id = ../../../../../src/app/components/company/companies/companies.component.css\n// module chunks = main","module.exports = \"<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n<div style=\\\"max-height: 100vh; overflow-y: auto\\\" *ngIf=\\\"companies\\\">\\r\\n  <button mat-button routerLink=\\\"/companyNew\\\" class=\\\"leftFloat\\\">\\r\\n    <mat-icon mat-list-icon>add</mat-icon>\\r\\n    <mat-icon mat-list-icon>business</mat-icon>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <h1 i18n=\\\"CompaniesHeader\\\" class=\\\"centerText\\\">Companies</h1>\\r\\n  <div style=\\\"margin-top:10px;  line-height:1.25;\\\" class=\\\"centerText\\\">\\r\\n    <mat-icon style=\\\"vertical-align:middle\\\">search</mat-icon>\\r\\n    <input #search placeholder=\\\"Search\\\" (keyup)=\\\"0\\\" class=\\\"inputSearchBox\\\"/>\\r\\n  </div>\\r\\n  <mat-list class=\\\"centeredList\\\">\\r\\n\\r\\n    <mat-list-item *ngFor=\\\"let company of (companies | listfilter: search.value)\\\" style=\\\"border-bottom: 1px solid grey; cursor: pointer\\\"\\r\\n      [routerLink]=\\\"['/companyEdit', company.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n      <mat-icon mat-list-icon>business</mat-icon>\\r\\n      <h4 mat-line>{{company.CompanyName}}</h4>\\r\\n      <p mat-line>{{ company.CompanyRFC }} </p>\\r\\n\\r\\n    </mat-list-item>\\r\\n    \\r\\n  </mat-list>\\r\\n  <br/>\\r\\n  <br/>  <br/>  <br/>  <br/>\\r\\n  <br/>  <br/>  <br/>  <br/>\\r\\n  <br/>  <br/>  <br/>\\r\\n</div>\\r\\n<div class=\\\"centerText\\\" *ngIf=\\\"!companies && isPromiseDone\\\" i18n=\\\"message | message letting the user know there are no companies@@NoCompaniesMessage\\\"> \\r\\n    There are no companies to view\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companies/companies.component.html\n// module id = ../../../../../src/app/components/company/companies/companies.component.html\n// module chunks = main","//angular imports\r\nimport { Component } from '@angular/core';\r\n//custom imports\r\nimport { CompanyModel } from '../../../models/company.model'\r\nimport { CompanyService } from '../../../services/company.service'\r\n\r\n@Component({\r\n  selector: 'ng-companies',\r\n  templateUrl: './companies.component.html',\r\n  styleUrls: ['./companies.component.css'],\r\n  providers: [ CompanyService ]\r\n})\r\nexport class CompaniesComponent {\r\n  companies: CompanyModel[];\r\n  isPromiseDone: boolean = false\r\n\r\n  constructor(companyService : CompanyService) { \r\n    companyService.getCompanies().subscribe(data => {\r\n      this.companies = data\r\n      this.isPromiseDone = true;\r\n    })\r\n\r\n    //companyService.getCompanies().subscribe(data => this.companies = data)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companies/companies.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  \\r\\n  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyEdit/companyEdit.component.css\n// module id = ../../../../../src/app/components/company/companyEdit/companyEdit.component.css\n// module chunks = main","module.exports = \"<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n<div style=\\\"max-height: 100vh; overflow-y: auto\\\" class=\\\"centeredList\\\">\\r\\n    <form class=\\\"example-form\\\" *ngIf=\\\"company\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Company ID\\\" disabled value=\\\"{{company.CompanyId}}\\\" i18n-placeholder=\\\"input field | input field which displays the companies id@@CompanyIdInput\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Company Name\\\" value=\\\"{{company.CompanyName}}\\\" [(ngModel)]=\\\"company.CompanyName\\\" name=\\\"companyName\\\"\\r\\n                i18n-placeholder=\\\"@@CompanyNameInput\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Address\\\" value=\\\"{{company.Address1}}\\\" [(ngModel)]=\\\"company.Address1\\\" name=\\\"companyAddress1\\\" i18n-placeholder=\\\"@@CompanyAdressInput\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\" style=\\\"margin-top:-40px\\\">\\r\\n            <input matInput value=\\\"{{company.Address2}}\\\" [(ngModel)]=\\\"company.Address2\\\" name=\\\"companyAddress2\\\" i18n-placeholder=\\\"@@CompanyAdressInput\\\">\\r\\n        </mat-form-field>\\r\\n        <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n            <tr>\\r\\n                <td>\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input matInput placeholder=\\\"City\\\" value=\\\"{{company.City}}\\\" [(ngModel)]=\\\"company.City\\\" name=\\\"companyCity\\\" i18n-placeholder=\\\"@@CompanyCityInput\\\">\\r\\n                    </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <mat-select placeholder=\\\"State\\\" [(ngModel)]=\\\"company.State\\\" name=companyState style=\\\"padding: 10px 15px 14px 15px\\\" i18n-placeholder=\\\"@@CompanyStateInput\\\">\\r\\n                        <mat-option *ngFor=\\\"let state of states.codes\\\" [value]=\\\"state\\\">\\r\\n                            {{ state }}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n\\r\\n                    <!-- <input matInput placeholder=\\\"State\\\" value=\\\"{{company.State}}\\\"> -->\\r\\n                    <!-- <md-form-field class=\\\"example-full-width\\\"></md-form-field></td> -->\\r\\n            </tr>\\r\\n        </table>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Zip Code\\\" value=\\\"{{company.PostalCode}}\\\" [(ngModel)]=\\\"company.PostalCode\\\" name=\\\"companyPostCode\\\"\\r\\n                i18n-placeholder=\\\"@@CompanyPostalCode\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"RFC\\\" value=\\\"{{company.CompanyRFC}}\\\" [(ngModel)]=\\\"company.CompanyRFC\\\" name=\\\"companyRfc\\\" i18n-placeholder=\\\"@@CompanyRFCInput\\\">\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=updateCompany() i18n=\\\"@@UpdateButton\\\"> Update </button>\\r\\n    <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyEdit/companyEdit.component.html\n// module id = ../../../../../src/app/components/company/companyEdit/companyEdit.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n//rxjs imports\r\nimport \"rxjs/add/operator/switchMap\";\r\nimport 'rxjs/add/operator/finally'\r\n//custom imports\r\nimport { CompanyService } from '../../../services/company.service'\r\nimport { CompanyModel } from '../../../models/company.model'\r\nimport { States } from '../../../models/states.models'\r\n//angular material imports\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Component({\r\n  selector: 'ng-company',\r\n  templateUrl: './companyEdit.component.html',\r\n  styleUrls: ['./companyEdit.component.css'],\r\n  providers: [ CompanyService ]\r\n})\r\nexport class CompanyEditComponent implements OnInit {\r\n  company: CompanyModel;\r\n  id: string;\r\n  states : States\r\n  isPromiseDone: boolean = false;\r\n  constructor(private route: ActivatedRoute, private companyService: CompanyService, public snackbar: MatSnackBar) { \r\n      this.states = new States();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n    .switchMap((params: ParamMap) => this.companyService.getCompanyById(params.get('cid')))\r\n    .subscribe(data => {\r\n      this.company = data\r\n      this.isPromiseDone = true\r\n    });\r\n  }\r\n\r\n  updateCompany(){\r\n    console.log(\"updating company\")\r\n     this.route.paramMap\r\n     .switchMap((params: ParamMap) => this.companyService.updateCompanyDetails(params.get('cid'), this.company).finally(()=> this.snackbar.open(\"Updated successfully\", \"\", {duration: 5000})))\r\n     .subscribe(\r\n       data =>  this.company = data,\r\n       error => this.snackbar.open(error, \"\", {duration: 5000}),\r\n       \r\n    );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyEdit/companyEdit.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  \\r\\n  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyNew/companyNew.component.css\n// module id = ../../../../../src/app/components/company/companyNew/companyNew.component.css\n// module chunks = main","module.exports = \"<div style=\\\"max-height: 100vh; overflow-y: auto\\\" class=\\\"centeredList\\\">\\r\\n    <form class=\\\"example-form\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"company.CompanyName\\\" name=companyName i18n-placeholder=\\\"input field | input field which contains the company's name@@CompanyNameInput\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"company.Address1\\\" name=companyAddress1 i18n-placeholder=\\\"input field | input field which contains the company's address@@CompanyAdressInput\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\" style=\\\"margin-top:-40px\\\">\\r\\n            <input matInput [(ngModel)]=\\\"company.Address2\\\" name=companyAddress2 i18n-placeholder=\\\"input field | input field which contains the company's address@@CompanyAdressInput\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n            <tr>\\r\\n                <td>\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input matInput placeholder=\\\"City\\\" [(ngModel)]=\\\"company.City\\\" name=companyCity i18n-placeholder=\\\"input field | input field which contains the companys' city@@CompanyCityInput\\\">\\r\\n                    </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <mat-select placeholder=\\\"State\\\" [(ngModel)]=\\\"company.State\\\" name=companyState style=\\\"padding: 10px 15px 14px 15px\\\" i18n-placeholder=\\\"input field | input field which contains the companys's state@@CompanyStateInput\\\">\\r\\n                        <mat-option *ngFor=\\\"let state of states.codes\\\" [value]=\\\"state\\\">\\r\\n                            {{ state }} \\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                    <!--  {{company.State}} -->\\r\\n                    <!-- <input matInput placeholder=\\\"State\\\" value=\\\"{{company.State}}\\\"> -->\\r\\n                    <!-- <md-form-field class=\\\"example-full-width\\\"></md-form-field></td> -->\\r\\n            </tr>\\r\\n        </table>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Zip Code\\\" [(ngModel)]=\\\"company.PostalCode\\\" name=companyZipCode i18n-placeholder=\\\"input field | input field which contains the company's zip code@@CompanyPostalCode\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"RFC\\\" [(ngModel)]=\\\"company.CompanyRFC\\\" name=companyRFC i18n-placeholder=\\\"input field | input field which contains the company's RFC code@@CompanyRFCInput\\\">\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=saveCompany() i18n=\\\"action | button which will save the company info@@SaveButton\\\"> Save </button>\\r\\n    <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyNew/companyNew.component.html\n// module id = ../../../../../src/app/components/company/companyNew/companyNew.component.html\n// module chunks = main","//angular imports\r\nimport { Component } from '@angular/core';\r\n//custom imports\r\nimport { CompanyModel } from '../../../models/company.model'\r\nimport { CompanyService } from '../../../services/company.service'\r\nimport { States } from '../../../models/states.models'\r\n//angular material imports\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Component({\r\n  selector: 'ng-newcompany',\r\n  templateUrl: './companyNew.component.html',\r\n  styleUrls: ['./companyNew.component.css'],\r\n  providers: [ CompanyService ]\r\n})\r\nexport class CompanyNewComponent {\r\n  company: CompanyModel;\r\n  id: string;\r\n  states : States\r\n\r\n  constructor(private companyService : CompanyService, public snackbar: MatSnackBar) { \r\n      this.states = new States();\r\n      this.company = new CompanyModel()\r\n  }\r\n    saveCompany(){\r\n       this.companyService.saveNewCompany(this.company).subscribe(data => this.company = data,\r\n                                                                  error => this.snackbar.open(error, \"\",{duration: 5000}),\r\n                                                                () => this.snackbar.open(\"Successfully updated\", \"\",{duration: 5000}));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/company/companyNew/companyNew.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsers/companyUsers.component.css\n// module id = ../../../../../src/app/components/companyuser/companyUsers/companyUsers.component.css\n// module chunks = main","module.exports = \"<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n\\r\\n<div style=\\\"max-height: 80vh; overflow-y: auto\\\" *ngIf=\\\"companies\\\">\\r\\n  \\r\\n <h1 i18n=\\\"message | telling user to select a company from the list to view the employees@@PickCompanyViewEmployeesMsg\\\" class=\\\"centerText\\\">Select Company to View Company Users</h1>\\r\\n <div style=\\\"margin-top:10px;  line-height:1.25;\\\" class=\\\"centerText\\\">\\r\\n       <mat-icon style=\\\"vertical-align:middle\\\">search</mat-icon>\\r\\n        <input #search placeholder=\\\"Search\\\" (keyup)=\\\"0\\\" class=\\\"inputSearchBox\\\"/>\\r\\n  </div>\\r\\n  <mat-list class=\\\"centeredList\\\">\\r\\n    <mat-list-item *ngFor=\\\"let company of (companies | listfilter: search.value)\\\" style=\\\"border-bottom: 1px solid grey;  cursor: pointer\\\" [routerLink]=\\\"['/companyusers', company.CompanyId]\\\"\\r\\n      routerLinkActive=\\\"active\\\">\\r\\n      <mat-icon mat-list-icon>business</mat-icon>\\r\\n      <h4 mat-line>{{company.CompanyName}}</h4>\\r\\n      <p mat-line> Date to go here </p>\\r\\n\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\\r\\n<div class=\\\"centerText\\\" *ngIf=\\\"!companies && isPromiseDone\\\" i18n=\\\"@@NoCompaniesMessage\\\"> \\r\\n    There are no companies to view\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsers/companyUsers.component.html\n// module id = ../../../../../src/app/components/companyuser/companyUsers/companyUsers.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\nimport { CompanyService } from '../../../services/company.service'\r\n\r\nimport { CompanyModel } from '../../../models/company.model'\r\n\r\n\r\n@Component({\r\n  selector: 'ng-company-users',\r\n  templateUrl: './companyUsers.component.html',\r\n  styleUrls: ['./companyUsers.component.css'],\r\n  providers: [ CompanyService ]\r\n})\r\n\r\nexport class CompanyUsersComponent {\r\n\r\n  companies: CompanyModel[];\r\n  isPromiseDone: boolean = false;\r\n  \r\n    constructor(companyService : CompanyService) { \r\n      companyService.getCompanies().subscribe(data => {\r\n        this.companies = data\r\n        this.isPromiseDone = true;\r\n      })\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsers/companyUsers.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  \\r\\n  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersEdit/companyUsersEdit.component.css\n// module id = ../../../../../src/app/components/companyuser/companyUsersEdit/companyUsersEdit.component.css\n// module chunks = main","module.exports = \"<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n\\r\\n<div style=\\\"max-height: 75vh; overflow-y: auto\\\"  class=\\\"centeredList\\\">\\r\\n  <form class=\\\"example-form\\\" *ngIf=\\\"companyUser\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput required placeholder=\\\"Email Address\\\" value=\\\"{{companyUser.EmailAddress}}\\\" [(ngModel)]=\\\"companyUser.EmailAddress\\\" name=companyUserEmail\\r\\n        i18n-placeholder=\\\"form | field displaying the company user's email@@CompanyUserEmail\\\">\\r\\n    </mat-form-field>\\r\\n      <!--<mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput required placeholder=\\\"Password\\\" value=\\\"{{companyUser.PasswordHash}}\\\" [(ngModel)]=\\\"companyUser.PasswordHash\\\" name=companyPasswordHash\\r\\n                 i18n-placeholder=\\\"form | field displaying the company user's password@@CompanyUserPasswordHash\\\">\\r\\n      </mat-form-field>-->\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Display Name\\\" value=\\\"{{companyUser.DisplayName}}\\\" [(ngModel)]=\\\"companyUser.DisplayName\\\" name=companyUserDisplayName\\r\\n        i18n-placeholder=\\\"form | field displaying the company user's display name@@CompanyUserDisplayName\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Phone Number\\\" value=\\\"{{companyUser.PhoneNumber}}\\\" [(ngModel)]=\\\"companyUser.PhoneNumber\\\" name=companyUserPhoneNumber\\r\\n        i18n-placeholder=\\\"form | field displaying the company user's phone number@@CompanyUserPhoneNumber\\\">\\r\\n    </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select  [(ngModel)]=\\\"companyUser.UserType\\\" title=\\\"User Type\\\" placeholder=\\\"User Type\\\" name=companyUserType i18n-placeholder=\\\"@@UserTypeInput\\\">\\r\\n              <mat-option *ngFor=\\\"let type of usertype.codes\\\" [value]=\\\"type\\\">\\r\\n                  {{ type }}\\r\\n              </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      <p align=\\\"right\\\"><b>Created By:</b>{{companyUser.CreatedByUserName}} - <b>Last Login:</b>{{companyUser.LastLogin}} - <b>Status:</b>{{companyUser.UserStatus}} </p>\\r\\n</form>\\r\\n\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=updateCompanyUser() i18n=\\\"@@UpdateButton\\\"> Update </button>\\r\\n  <br/><br/>\\r\\n    \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersEdit/companyUsersEdit.component.html\n// module id = ../../../../../src/app/components/companyuser/companyUsersEdit/companyUsersEdit.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n//rxjs imports\r\nimport \"rxjs/add/operator/switchMap\";\r\nimport 'rxjs/add/operator/finally'\r\n//custom imports\r\nimport { UserType} from '../../../models/usertype.models'\r\nimport { CompanyUsersService } from '../../../services/companyUser.service'\r\nimport { CompanyUserModel } from '../../../models/companyUser.model'\r\n//angular material imports\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Component({\r\n  selector: 'ng-company-users-edit',\r\n  templateUrl: './companyUsersEdit.component.html',\r\n  styleUrls: ['./companyUsersEdit.component.css'],\r\n  providers: [ CompanyUsersService ]\r\n})\r\nexport class CompanyUsersEditComponent implements OnInit {\r\n  companyUser: CompanyUserModel;\r\n  companyId: string;\r\n  employeeID: string;\r\n  usertype: UserType;\r\n  isPromiseDone: boolean = false;\r\n\r\n  constructor(private route: ActivatedRoute, private companyUserService: CompanyUsersService, public snackbar: MatSnackBar, private _location: Location) { \r\n      this.usertype = new UserType();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n    .switchMap((params: ParamMap) => this.companyUserService.getCompanyUserById(params.get('cid'), params.get('cuid')))\r\n    .subscribe(data => {\r\n      this.companyUser = data\r\n      this.isPromiseDone = true;\r\n    });\r\n  }\r\n\r\n  updateCompanyUser(){\r\n     this.route.paramMap\r\n     .switchMap((params: ParamMap) => this.companyUserService.updateCompanyUserDetails(params.get('cuid'), this.companyUser).finally(() => this.snackbar.open(\"sucessfully updated\", \"\",{duration: 5000}) ))\r\n         .subscribe(data => { this.companyUser = data; this._location.back(); },\r\n                error => this.snackbar.open(error, \"\",{duration: 5000}))\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersEdit/companyUsersEdit.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersList/companyUsersList.component.css\n// module id = ../../../../../src/app/components/companyuser/companyUsersList/companyUsersList.component.css\n// module chunks = main","module.exports = \"<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n\\r\\n<div style=\\\"max-height: 80vh; overflow-y: auto\\\" *ngIf=\\\"companyUsers\\\">\\r\\n  <button mat-button [routerLink]=\\\"['/companyuserNew', companyId]\\\" class=\\\"leftFloat\\\">\\r\\n  <mat-icon mat-list-icon >add</mat-icon><mat-icon mat-list-icon>account_circle</mat-icon> \\r\\n</button>\\r\\n<h1 i18n=\\\"header | header of the company users section@@CompanyUsersHeader\\\" class=\\\"centerText\\\">Users</h1>\\r\\n<div style=\\\"margin-top:10px\\\" class=\\\"centerText\\\">\\r\\n    <mat-icon style=\\\"vertical-align:middle\\\">search</mat-icon>\\r\\n    <input #search placeholder=\\\"Search\\\" (keyup)=\\\"0\\\" class=\\\"inputSearchBox \\\" />\\r\\n</div>\\r\\n\\r\\n  <mat-list class=\\\"centeredList\\\">\\r\\n    \\r\\n    <mat-list-item *ngFor=\\\"let user of (companyUsers | listfilter: search.value)\\\" style=\\\"border-bottom: 1px solid grey; cursor: pointer\\\" [routerLink]=\\\"['/companyuser', user.CompanyId ,user.UserId]\\\"\\r\\n      routerLinkActive=\\\"active\\\">\\r\\n      <mat-icon mat-list-icon><i class=\\\"material-icons\\\">account_circle</i></mat-icon>\\r\\n      <h4 mat-line>{{user.EmailAddress}}</h4>\\r\\n      <p mat-line> {{user.LastLogin | date}}</p>\\r\\n\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\\r\\n<div class=\\\"centerText\\\" *ngIf=\\\"!companyUsers && isPromiseDone\\\" i18n=\\\"message | message letting the user know there are no company users@@NoCompanyUsersMessage\\\"> \\r\\n    There are no users to view\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersList/companyUsersList.component.html\n// module id = ../../../../../src/app/components/companyuser/companyUsersList/companyUsersList.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Params } from '@angular/router';\r\n//rxjs imports\r\nimport \"rxjs/add/operator/switchMap\";\r\n//custom imports\r\nimport { CompanyUsersService } from '../../../services/companyUser.service'\r\nimport { EmployeeModel } from '../../../models/employee.model'\r\nimport { States } from '../../../models/states.models'\r\n\r\n@Component({\r\n  selector: 'ng-company-users-list',\r\n  templateUrl: './companyUsersList.component.html',\r\n  styleUrls: ['./companyUsersList.component.css'],\r\n  providers: [ CompanyUsersService ]\r\n})\r\nexport class CompanyUsersListComponent implements OnInit {\r\n  companyId: string;\r\n  companyUsers: any[]\r\n  isPromiseDone: boolean = false;\r\n\r\n  constructor(private route: ActivatedRoute, private employeeService: CompanyUsersService) { \r\n     route.params.subscribe((params: Params) => {\r\n       this.companyId = params['cid'];\r\n     })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n    .switchMap((params: ParamMap) => this.employeeService.getCompanyUsersByCompany(params.get('cid')))\r\n    .subscribe(data => {\r\n      this.companyUsers = data\r\n      this.isPromiseDone = true;\r\n    });\r\n  }\r\n\r\n  updateEmployee(){\r\n    //  this.route.paramMap\r\n    //  .switchMap((params: ParamMap) => this.employeeService.updateCompanyDetails(params.get('id'), this.company))\r\n    //  .subscribe(data => this.company = data);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersList/companyUsersList.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  \\r\\n  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersNew/companyUsersNew.component.css\n// module id = ../../../../../src/app/components/companyuser/companyUsersNew/companyUsersNew.component.css\n// module chunks = main","module.exports = \"<div style=\\\"max-height: 70vh; overflow-y: auto\\\" class=\\\"centeredList\\\">\\r\\n  <form class=\\\"example-form\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Email Address\\\" value=\\\"{{companyUser.EmailAddress}}\\\" [(ngModel)]=\\\"companyUser.EmailAddress\\\" name=companyUserEmail\\r\\n        i18n-placeholder=\\\"form | field displaying the company user's email@@CompanyUserEmail\\\">\\r\\n    </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" value=\\\"{{companyUser.PasswordHash}}\\\" [(ngModel)]=\\\"companyUser.PasswordHash\\\" name=companyPasswordHash\\r\\n                 i18n-placeholder=\\\"form | field displaying the company user's password@@CompanyUserPasswordHash\\\">\\r\\n      </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Display Name\\\" value=\\\"{{companyUser.DisplayName}}\\\" [(ngModel)]=\\\"companyUser.DisplayName\\\" name=companyUserDisplayName\\r\\n        i18n-placeholder=\\\"form | field displaying the company user's display name@@CompanyUserDisplayName\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Phone Number\\\" value=\\\"{{companyUser.PhoneNumber}}\\\" [(ngModel)]=\\\"companyUser.PhoneNumber\\\" name=companyUserPhoneNumber\\r\\n        i18n-placeholder=\\\"form | field displaying the company user's phone number@@CompanyUserPhoneNumber\\\">\\r\\n    </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <mat-select [(ngModel)]=\\\"companyUser.UserType\\\" title=\\\"User Type\\\" placeholder=\\\"User Type\\\" name=companyUserType i18n-placeholder=\\\"@@UserTypeInput\\\">\\r\\n              <mat-option *ngFor=\\\"let type of usertype.codes\\\" [value]=\\\"type\\\">\\r\\n                  {{ type }} \\r\\n              </mat-option>\\r\\n          </mat-select>\\r\\n      </mat-form-field>\\r\\n  </form>\\r\\n\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=saveNewCompanyUser() i18n=\\\"@@UpdateButton\\\"> Save </button>\\r\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersNew/companyUsersNew.component.html\n// module id = ../../../../../src/app/components/companyuser/companyUsersNew/companyUsersNew.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n//rxjs imports\r\nimport \"rxjs/add/operator/switchMap\";\r\nimport 'rxjs/add/operator/finally'\r\n//custom imports\r\nimport { UserType } from '../../../models/usertype.models'\r\nimport { UserService } from '../../../services/user.service'\r\nimport { CompanyUsersService } from '../../../services/companyUser.service'\r\nimport { CompanyUserModel } from '../../../models/companyUser.model'\r\n//angular material imports\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Component({\r\n  selector: 'ng-company-users-new',\r\n  templateUrl: './companyUsersNew.component.html',\r\n  styleUrls: ['./companyUsersNew.component.css'],\r\n  providers: [ CompanyUsersService ]\r\n})\r\nexport class CompanyUsersNewComponent implements OnInit {\r\n  companyUser: CompanyUserModel;\r\n  companyId: string;\r\n  usertype: UserType;\r\n  employeeID: string;\r\n\r\n  constructor(private route: ActivatedRoute, private companyUserService: CompanyUsersService, public snackbar: MatSnackBar, private _location: Location, private userService: UserService) { \r\n      this.companyUser = new CompanyUserModel()\r\n      this.usertype = new UserType();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.companyId = params['cid'];\r\n    })\r\n  }\r\n\r\n  saveNewCompanyUser(){\r\n      this.companyUser.CompanyId = +this.companyId;\r\n      let user = this.userService.getUser();\r\n      this.companyUser.CreatedByUserId = user.UserId;\r\n     this.route.paramMap\r\n         .switchMap((params: ParamMap) => this.companyUserService.saveNewCompanyUser(this.companyUser))\r\n         .subscribe(\r\n         data => { this.companyUser = data; this._location.back(); }, \r\n         error => this.snackbar.open(error, \"\", { duration: 5000 }),\r\n         () => this.snackbar.open(\"Successfully Updated\", \"\", { duration: 5000 })\r\n     )\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/companyuser/companyUsersNew/companyUsersNew.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  \\r\\n  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n<div style=\\\"max-height: 100vh; overflow-y: auto\\\" class=\\\"centeredList\\\">\\r\\n    <form class=\\\"example-form\\\" *ngIf=\\\"systemSettings\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Product Name\\\" value=\\\"{{systemSettings.ProductName}}\\\" [(ngModel)]=\\\"systemSettings.ProductName\\\"\\r\\n                name=\\\"systemName\\\" i18n-placeholder=\\\"input field | input field which contains the companys's product name@@CompanyProductNameInput\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Product Icon\\\" value=\\\"{{systemSettings.ProductIcon}}\\\" [(ngModel)]=\\\"systemSettings.ProductIcon\\\"\\r\\n                name=\\\"systemIcon\\\" i18n-placeholder=\\\"input field | input field which contains the companys's product icon@@CompanyProductIconInput\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Support Telephone Number\\\" value=\\\"{{systemSettings.SupportTelephoneNumber}}\\\" [(ngModel)]=\\\"systemSettings.SupportTelephoneNumber\\\"\\r\\n                name=\\\"systemNumber\\\" i18n-placeholder=\\\"input field | input field which contains the companys's telephone number@@CompanySupportTelephoneInput\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Primary System File Path\\\" value=\\\"{{systemSettings.SystemFilePath1}}\\\" [(ngModel)]=\\\"systemSettings.SystemFilePath1\\\"\\r\\n                name=\\\"systemFilePath1\\\" i18n-placeholder=\\\"input field | input field which contains the companys's primary file path@@CompanyPrimaryFilePathInput\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput placeholder=\\\"Backup System File Path\\\" value=\\\"{{systemSettings.SystemFilePath2}}\\\" [(ngModel)]=\\\"systemSettings.SystemFilePath2\\\"\\r\\n                name=\\\"systemFilePath2\\\" i18n-placeholder=\\\"input field | input field which contains the companys's backup file path@@CompanyFilePathBackupInput\\\">\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=updateSettings() i18n=\\\"@@UpdateButton\\\"> Update </button>\\r\\n    <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\nimport { AlertComponent } from '../alert/alert.component'\r\n\r\nimport { SettingsService } from '../../services/settings.service'\r\n\r\n//angular material imports\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Component({\r\n  selector: 'ng-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent {\r\n  systemSettings\r\n  isPromiseDone: boolean = false\r\n\r\n  constructor(private settingsService: SettingsService,  public snackBar: MatSnackBar) {\r\n    settingsService.getSystemSettings().subscribe(data => {\r\n      this.systemSettings = data[0]\r\n      this.isPromiseDone = true;\r\n    })\r\n   }\r\n\r\n   updateSettings(){\r\n     this.settingsService.updateSystemSettings(this.systemSettings).subscribe(\r\n       data => this.systemSettings = data,\r\n      error => this.snackBar.open(error, \"\", {duration: 5000}),\r\n      () => this.snackBar.open(\"Successfully Updated\", \"\",{duration: 5000})\r\n      )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/dashboard/dashboard.component.ts","module.exports = \"<h2 class=\\\"centerText\\\" i18n=\\\"message | a message to let the user refused document details\\\">\\r\\n    Details for document ID {{ doc.DocumentId }}:\\r\\n    \\r\\n</h2>\\r\\n\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td><b>Employee Name:</b></td>\\r\\n            <td> {{ doc.EmployeeName }} </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td><b>Pay Period:</b></td>\\r\\n            <td> {{ doc.PayperiodDate }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td><b>Upload Time:</b></td>\\r\\n            <td> {{ doc.UploadTime }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td><b>Rejection Reason:</b></td>\\r\\n            <td> {{ doc.EmployeeConcern }}</td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n<hr/>\\r\\n<div>\\r\\n    <table width=\\\"100%\\\">\\r\\n        <tr>\\r\\n            <td>\\r\\n                <button style=\\\"float:left\\\" mat-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\"> Resubmit </button>\\r\\n            </td>\\r\\n            <td>\\r\\n                <button style=\\\"float:right\\\" mat-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\"> Close </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/documentList/document-alert.dialog.html\n// module id = ../../../../../src/app/components/documentList/document-alert.dialog.html\n// module chunks = main","module.exports = \"\\r\\n<h1 *ngIf=\\\"(signStatusSearch === '1')\\\" i18n=\\\"header | header of the employees section@@EmployeesHeader\\\" class=\\\"centerText\\\">Unsigned Documents</h1>\\r\\n<h1 *ngIf=\\\"(signStatusSearch === '3')\\\" i18n=\\\"header | header of the employees section@@EmployeesHeader\\\" class=\\\"centerText\\\">Refused Documents</h1>\\r\\n\\r\\n    <div style=\\\"margin-top:10px; line-height: 1.25\\\" class=\\\"centerText\\\">\\r\\n        <mat-icon style=\\\"vertical-align:middle\\\">search</mat-icon>\\r\\n        <input #search placeholder=\\\"Search\\\" (keyup)=\\\"0\\\" class=\\\"inputSearchBox\\\" />\\r\\n        <button *ngIf=\\\"(signStatusSearch === '1')\\\" mat-raised-button color=\\\"primary\\\" i18n=\\\"@@UpdateButton\\\"> Send Reminders </button>\\r\\n    </div>\\r\\n<div style=\\\"max-height: 100vh; overflow-y: auto\\\" *ngIf=\\\"documents\\\">    \\r\\n    <mat-list class=\\\"centeredList\\\">\\r\\n\\r\\n        <mat-list-item *ngFor=\\\"let document of (documents | listfilter: search.value)\\\" style=\\\"border-bottom: 1px solid grey; cursor: pointer\\\" (click)=\\\"showDialog(document)\\\" routerLinkActive=\\\"active\\\">\\r\\n            <mat-icon mat-list-icon><i class=\\\"material-icons\\\">account_circle</i></mat-icon>\\r\\n            <!--<h4 mat-line>{{document.SignStatus}}</h4>-->\\r\\n            <p mat-line>{{document.EmployeeName}}, PayPeriod: {{document.PayperiodDate}}, Date Uploaded: {{document.UploadTime}} </p>\\r\\n        </mat-list-item>\\r\\n    </mat-list>\\r\\n    <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\\r\\n    <div *ngIf=\\\"!documents && isPromiseDone\\\" i18n=\\\"message | message letting the user know there are no documents@@NoDocumentsMessage\\\">\\r\\n        There are no documents to view\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/documentList/documentList.component.html\n// module id = ../../../../../src/app/components/documentList/documentList.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Params } from '@angular/router';\r\n\r\n//rxjs imports\r\nimport \"rxjs/add/operator/switchMap\";\r\nimport 'rxjs/add/operator/finally'\r\n\r\nimport { DocumentModel } from '../../models/document.model'\r\nimport { DocumentService } from '../../services/documents.service'\r\n\r\n//angular material imports\r\nimport { MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material'\r\n\r\n\r\n@Component({\r\n    selector: 'ng-documents-view',\r\n    templateUrl: './documentList.component.html',\r\n    //styleUrls: ['./employeeEdit.component.css'],\r\n    providers: [DocumentService]\r\n})\r\nexport class DocumentListComponent implements OnInit {\r\n    documents: DocumentModel[];\r\n    companyId: string;\r\n    signStatusSearch: string;\r\n    isPromiseDone: boolean = false;\r\n\r\n    constructor(private route: ActivatedRoute, private documentService: DocumentService, public snackbar: MatSnackBar, public dialog: MatDialog) {\r\n        route.params.subscribe((params: Params)  => {\r\n            this.signStatusSearch = params['sts'];\r\n            this.companyId = params['cid'];\r\n        });\r\n    }\r\n\r\n    showDialog(document: DocumentModel) {\r\n        let dialogRef = this.dialog.open(RefusedDocumentAlertDialog, {\r\n            width: '50%',\r\n            data: {'document': document} \r\n        } )\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        // 1 == unsigned, 3 == rejected\r\n        if (this.signStatusSearch === '1') {\r\n            this.route.paramMap\r\n                .switchMap((params: ParamMap) => this.documentService.getUnsignedDocumentsForCompany(this.companyId))\r\n                .subscribe(data => {\r\n                    this.documents = data\r\n                    this.isPromiseDone = true;\r\n                });\r\n        }\r\n        else {\r\n            this.route.paramMap\r\n                .switchMap((params: ParamMap) => this.documentService.getRejectedDocumentsForCompany(this.companyId))\r\n                .subscribe(data => {\r\n                    this.documents = data\r\n                    this.isPromiseDone = true;\r\n                });\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'refused-alert-dialog',\r\n    templateUrl: 'document-alert.dialog.html',\r\n})\r\nexport class RefusedDocumentAlertDialog implements OnInit {\r\n    doc: DocumentModel\r\n    employeeName: string;\r\n    PayPeriod: string;\r\n    uploadTime: string;\r\n    reasonRefused: string;\r\n    documentId: string;\r\n\r\n    constructor(public dialogRef: MatDialogRef<RefusedDocumentAlertDialog>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.doc = this.data['document'];\r\n        //this.documentId = this.data['documentId'];\r\n        //this.employeeName = this.data['employeeName'];\r\n        //this.uploadTime = this.data['uploadTime'];\r\n        //this.PayPeriod = this.data['payPeriod'];\r\n        //this.reasonRefused = this.data['reasonRefused'];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/documentList/documentList.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  \\r\\n  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeEdit/employeeEdit.component.css\n// module id = ../../../../../src/app/components/employee/employeeEdit/employeeEdit.component.css\n// module chunks = main","module.exports = \"<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n\\r\\n<div style=\\\"max-height: 80vh; overflow-y: auto\\\" class=\\\"centeredList\\\" *ngIf=\\\"employee\\\">\\r\\n        <form class=\\\"example-form\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input required matInput placeholder=\\\"Email Address\\\" value=\\\"{{employee.EmailAddress}}\\\" [(ngModel)]=\\\"employee.EmailAddress\\\" name=employeeEmailAddress\\r\\n                       i18n-placeholder=\\\"@@EmployeeEmailField\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"First Name\\\" value=\\\"{{employee.FirstName}}\\\" [(ngModel)]=\\\"employee.FirstName\\\" name=employeeFirst\\r\\n                       i18n-placeholder=\\\"@@EmployeeFirstNameField\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"1st Last Name\\\" value=\\\"{{employee.LastName1}}\\\" [(ngModel)]=\\\"employee.LastName1\\\" name=employeeLast1\\r\\n                       i18n-placeholder=\\\"@@EmployeeLastNameField\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"2nd Last Name\\\" value=\\\"{{employee.LastName2}}\\\" [(ngModel)]=\\\"employee.LastName2\\\" name=employeeLast2\\r\\n                       i18n-placeholder=\\\"@@EmployeeLastNameField\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Cell Number\\\" value=\\\"{{employee.CellPhoneNumber}}\\\" [(ngModel)]=\\\"employee.CellPhoneNumber\\\" name=employeeCellPhoneNumber\\r\\n                       i18n-placeholder=\\\"@@EmployeeCellPhoneNumber\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"CURP\\\" value=\\\"{{employee.CURP}}\\\" [(ngModel)]=\\\"employee.CURP\\\" name=employeeCURP i18n-placeholder=\\\"@@EmployeeCURPField\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"RFC\\\" value=\\\"{{employee.RFC}}\\\" [(ngModel)]=\\\"employee.RFC\\\" name=employeeRFC i18n-placeholder=\\\"@@EmployeeRFCField\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <p align=\\\"right\\\"><b>Created By:</b>{{employee.CreatedByUserName}} - <b>Last Login:</b>{{employee.LastLogin}} </p>\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <input-file style=\\\"padding-bottom:15px\\\" (onFileSelect)=\\\"onFileSelect($event)\\\">\\r\\n                            <span class=\\\"nofiles\\\">Upload Employee File</span>\\r\\n                            <span class=\\\"selected\\\">Files selected</span>\\r\\n                        </input-file>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <div *ngIf=\\\"files\\\">\\r\\n                            <div *ngFor=\\\"let file of files\\\">\\r\\n                                {{ file.name}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr style=\\\"padding-top: 25px\\\">\\r\\n                    <td style=\\\"padding-top: 25px\\\" colspan=\\\"2\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=updateEmployee() i18n=\\\"@@UpdateButton\\\"> Update </button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </form>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeEdit/employeeEdit.component.html\n// module id = ../../../../../src/app/components/employee/employeeEdit/employeeEdit.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, ParamMap } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n//rxjs imports\r\nimport \"rxjs/add/operator/switchMap\";\r\nimport 'rxjs/add/operator/finally'\r\n//custom imports\r\nimport { EmployeeService } from '../../../services/employee.service'\r\nimport { EmployeeModel } from '../../../models/employee.model'\r\nimport { UploadService } from '../../../services/upload.service'\r\nimport { FileModel } from '../../../models/file.model'\r\nimport { CompanyService } from '../../../services/company.service'\r\nimport { UserService } from '../../../services/user.service'\r\n//angular material imports\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Component({\r\n  selector: 'ng-employee-edit',\r\n  templateUrl: './employeeEdit.component.html',\r\n  styleUrls: ['./employeeEdit.component.css'],\r\n  providers: [EmployeeService, CompanyService]\r\n})\r\nexport class EmployeeEditComponent implements OnInit {\r\n  //userStatus: any;\r\n  employee: EmployeeModel;\r\n  companyId: string;\r\n  employeeID: string;\r\n  isPromiseDone: boolean = false;\r\n  files: any[]\r\n\r\n  constructor(private route: ActivatedRoute, private employeeService: EmployeeService, public snackbar: MatSnackBar, private uploadService: UploadService,\r\n      private companyService: CompanyService, private userService: UserService, private _location: Location) {\r\n      //this.userStatus = userService.getUserType();\r\n\r\n      // get company Id\r\n      route.params.subscribe((params: Params) => {\r\n          this.companyId = params['cid'];\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n      .switchMap((params: ParamMap) => this.employeeService.getEmployeeById(params.get('cid'), params.get('eid')))\r\n      .subscribe(data => {\r\n        this.employee = data;\r\n        this.isPromiseDone = true;\r\n      });\r\n  }\r\n\r\n  updateEmployee() {\r\n    this.route.paramMap\r\n        .switchMap((params: ParamMap) => this.employeeService.updateEmployeeDetails(params.get('eid'), this.employee).finally(() => { this.snackbar.open(\"sucessfully updated\", \"\", { duration: 5000 });}))\r\n        .subscribe(data => { this.employee = data; if (!this.files) { this._location.back(); } },\r\n      error => this.snackbar.open(error, \"\", { duration: 5000 }))\r\n\r\n    if (this.files && this.files.length > 0) {\r\n      this.companyService.getCompanyById(this.employee.CompanyId).subscribe(data => {\r\n        this.uploadService.openBatch(data.CompanyRFC).subscribe(data => {\r\n          let batchId = data.BatchId;\r\n          for (let file of this.files) {\r\n            this.uploadFile(file, batchId)\r\n          };\r\n          this.uploadService.closeBatch(batchId).subscribe(data => {\r\n              console.log('closed'); this._location.back();\r\n            //success from closed batch\r\n          })\r\n        })\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  onFileSelect(event) {\r\n    this.files = event;\r\n  }\r\n\r\n  uploadFile(file, batchId): any {\r\n    let uploadFile = new FileModel()\r\n    uploadFile.EmployeeCURP = this.employee.CURP;\r\n    //uploadFile.CompanyId = this.companyId;\r\n    uploadFile.FileName = file.name;\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(file)\r\n    reader.onload = (e) => {\r\n      uploadFile.Content = reader.result.split(',')[1] //removes data:image...   \r\n      this.uploadService.addFile(uploadFile, batchId).subscribe(data => data) //success from file uploads\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeEdit/employeeEdit.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  \\r\\n  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeNew/employeeNew.component.css\n// module id = ../../../../../src/app/components/employee/employeeNew/employeeNew.component.css\n// module chunks = main","module.exports = \"<div style=\\\"max-height: 80vh; overflow-y: auto\\\" class=\\\"centeredList\\\"> \\r\\n  <form class=\\\"example-form\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Company ID\\\" disabled value=\\\"{{employee.CompanyId}}\\\" i18n-placeholder=\\\"input field | input field which contains the company's id@@CompanyIdField\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput required placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"employee.EmailAddress\\\" name=employeeEmail i18n-placeholder=\\\"input field | input field which contains the employee's email@@EmployeeEmailField\\\">\\r\\n    </mat-form-field>\\r\\n    <!--<mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input required matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"employee.PasswordHash\\\" name=employeePassword i18n-placeholder=\\\"input field | input field which contains the employee's password@@EmployeePasswordField\\\">\\r\\n    </mat-form-field>-->\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"employee.FirstName\\\" name=employeeFirst i18n-placeholder=\\\"input field | input field which contains the employee's first name@@EmployeeFirstNameField\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"1st Last Name\\\" [(ngModel)]=\\\"employee.LastName1\\\" name=employeeLast1 i18n-placeholder=\\\"input field | input field which contains the employee's last name@@EmployeeLastNameField\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"2nd Last Name\\\" [(ngModel)]=\\\"employee.LastName2\\\" name=employeeLast2 i18n-placeholder=\\\"input field | input field which contains the employee's last name@@EmployeeLastNameField\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Cell Number\\\" value=\\\"{{employee.CellPhoneNumber}}\\\" [(ngModel)]=\\\"employee.CellPhoneNumber\\\" name=employeeCellPhoneNumber\\r\\n                 i18n-placeholder=\\\"@@EmployeeCellPhoneNumber\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"CURP\\\" [(ngModel)]=\\\"employee.CURP\\\" name=employeeCurp i18n-placeholder=\\\"input field | input field which contains the employee's curp value@@EmployeeCURPField\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"RFC\\\" [(ngModel)]=\\\"employee.RFC\\\" name=employeeRfc i18n-placeholder=\\\"input field | input field which contains the employee's rfc code@@EmployeeRFCField\\\">\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=saveEmployee() i18n=\\\"action | button which will update the employee's info when clicked@@UpdateButton\\\"> Save </button>\\r\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeNew/employeeNew.component.html\n// module id = ../../../../../src/app/components/employee/employeeNew/employeeNew.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, ParamMap, Params } from '@angular/router';\r\n//rxjs imports\r\nimport \"rxjs/add/operator/switchMap\";\r\nimport 'rxjs/add/operator/finally'\r\n//custom imports\r\nimport { EmployeeService } from '../../../services/employee.service'\r\nimport { User } from '../../../models/user.model'\r\n//angular material imports\r\nimport { MatSnackBar } from '@angular/material'\r\n\r\n@Component({\r\n  selector: 'ng-employee-new',\r\n  templateUrl: './employeeNew.component.html',\r\n  styleUrls: ['./employeeNew.component.css'],\r\n  providers: [ EmployeeService ]\r\n})\r\nexport class EmployeeNewComponent implements OnInit {\r\n  employee: User;\r\n  companyId: string;\r\n  employeeID: string;\r\n\r\n  constructor(private route: ActivatedRoute, private employeeService: EmployeeService, public snackbar: MatSnackBar, private _location: Location) { \r\n      this.employee = new User()\r\n      route.params.subscribe((params: Params) => {\r\n        this.employee.CompanyId = params['cid'];\r\n      })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  saveEmployee() {\r\n      this.employee.CreatedByUserId = 2 //TODO FIX THIS HARDCODE\r\n      console.log(\"save employee\")\r\n      this.route.paramMap\r\n          .switchMap((params: ParamMap) =>\r\n              this.employeeService.saveNewEmployee(this.employee).finally(() =>\r\n              { this.snackbar.open(\"Updated successfully\", \"\", { duration: 5000 });}))\r\n          .subscribe(data => { this.employee = data; this._location.back(); },\r\n          error => this.snackbar.open(error, \"\", { duration: 5000 })); \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeeNew/employeeNew.component.ts","module.exports = \"<mat-spinner style=\\\"margin:0 auto\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n\\r\\n<div style=\\\"max-height: 100vh; overflow-y: auto\\\" *ngIf=\\\"companies\\\">\\r\\n  <h1 i18n=\\\"message | telling user to select a company from the list to view the employees@@PickCompanyViewEmployeesMsg\\\" class=\\\"centerText\\\">\\r\\n    Select Company to View Employees\\r\\n  </h1>\\r\\n  <div style=\\\"margin-top:10px; line-height:1.25;\\\" class=\\\"centerText\\\">\\r\\n    <mat-icon style=\\\"vertical-align:middle\\\">search</mat-icon>\\r\\n    <input #search placeholder=\\\"Search\\\" (keyup)=\\\"0\\\" class=\\\"inputSearchBox\\\" />\\r\\n  </div>\\r\\n  <mat-list class=\\\"centeredList\\\">\\r\\n    <mat-list-item *ngFor=\\\"let company of (companies | listfilter: search.value)\\\" style=\\\"border-bottom: 1px solid grey; cursor: pointer\\\" [routerLink]=\\\"['/employeesList', company.CompanyId]\\\"\\r\\n      routerLinkActive=\\\"active\\\">\\r\\n      <mat-icon mat-list-icon>business</mat-icon>\\r\\n      <h4 mat-line>{{company.CompanyName}}</h4>\\r\\n      <p mat-line> Date to go here </p>\\r\\n\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\\r\\n<div class=\\\"centerText\\\" *ngIf=\\\"!companies && isPromiseDone\\\" i18n=\\\"@@NoCompaniesMessage\\\"> \\r\\n    There are no companies to view\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employees/employees.component.html\n// module id = ../../../../../src/app/components/employee/employees/employees.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\nimport { CompanyService } from '../../../services/company.service'\r\n\r\nimport { EmployeeModel } from '../../../models/employee.model'\r\nimport { CompanyModel } from '../../../models/company.model'\r\n\r\n\r\n@Component({\r\n  selector: 'ng-employees',\r\n  templateUrl: './employees.component.html',\r\n  //styleUrls: ['./employees.component.css'],\r\n  providers: [ CompanyService ]\r\n})\r\n\r\nexport class EmployeesComponent {\r\n\r\n  employees: EmployeeModel[];\r\n  companies: CompanyModel[];\r\n  isPromiseDone: boolean = false\r\n    constructor(companyService : CompanyService) { \r\n      companyService.getCompanies().subscribe(data => {\r\n        this.companies = data\r\n        this.isPromiseDone = true;\r\n      })\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employees/employees.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .example-full-width {\\r\\n    display:flow-root;\\r\\n  }\\r\\n\\r\\n  /* ignore parent width */\\r\\n  .mat-form-field{\\r\\n        width:auto;\\r\\n        padding:10px 25px 10px 25px;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeesList/employeesList.component.css\n// module id = ../../../../../src/app/components/employee/employeesList/employeesList.component.css\n// module chunks = main","module.exports = \"<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"!isPromiseDone\\\"></mat-spinner>\\r\\n\\r\\n<div  style=\\\"overflow-y: auto; max-height:80vh\\\" *ngIf=\\\"employees\\\">\\r\\n  <button mat-button [routerLink]=\\\"['/employeeNew', companyId]\\\" class=\\\"leftFloat\\\">\\r\\n  <mat-icon mat-list-icon>add</mat-icon><mat-icon mat-list-icon>account_circle</mat-icon> \\r\\n</button>\\r\\n<h1 i18n=\\\"header | header of the employees section@@EmployeesHeader\\\" class=\\\"centerText\\\">Employees</h1>\\r\\n<div style=\\\"margin-top:10px; line-height: 1.25\\\" class=\\\"centerText\\\">\\r\\n    <mat-icon style=\\\"vertical-align:middle\\\">search</mat-icon>\\r\\n    <input #search placeholder=\\\"Search\\\" (keyup)=\\\"0\\\" class=\\\"inputSearchBox\\\" />\\r\\n</div>\\r\\n\\r\\n  <mat-list class=\\\"centeredList\\\">\\r\\n    \\r\\n    <mat-list-item *ngFor=\\\"let employee of (employees | listfilter: search.value)\\\" style=\\\"border-bottom: 1px solid grey; cursor: pointer\\\" [routerLink]=\\\"['/employeeEdit', companyId ,employee.EmployeeId]\\\"\\r\\n      routerLinkActive=\\\"active\\\">\\r\\n      <mat-icon mat-list-icon><i class=\\\"material-icons\\\">account_circle</i></mat-icon>\\r\\n      <h4 mat-line>{{employee.EmailAddress}}</h4>\\r\\n      <p mat-line> {{employee.FirstName}} {{employee.LastName1}} {{employee.LastName2}} </p>\\r\\n\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\r\\n</div>\\r\\n<div *ngIf=\\\"!employees && isPromiseDone\\\" i18n=\\\"message | message letting the user know there are no employees@@NoEmployeesMessage\\\"> \\r\\n    There are no employees to view\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeesList/employeesList.component.html\n// module id = ../../../../../src/app/components/employee/employeesList/employeesList.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Params } from '@angular/router';\r\n//rxjs imports\r\nimport \"rxjs/add/operator/switchMap\";\r\n//custom imports\r\nimport { EmployeeService } from '../../../services/employee.service'\r\nimport { EmployeeModel } from '../../../models/employee.model'\r\nimport { States } from '../../../models/states.models'\r\n\r\n@Component({\r\n  selector: 'ng-employees',\r\n  templateUrl: './employeesList.component.html',\r\n  styleUrls: ['./employeesList.component.css'],\r\n  providers: [ EmployeeService ]\r\n})\r\nexport class EmployeesListComponent implements OnInit {\r\n  employees: EmployeeModel[];\r\n  companyId: string;\r\n  isPromiseDone: boolean = false;\r\n\r\n  constructor(private route: ActivatedRoute, private employeeService: EmployeeService) { \r\n     route.params.subscribe((params: Params) => {\r\n       this.companyId = params['cid'];\r\n     })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n    .switchMap((params: ParamMap) => this.employeeService.getEmployeesByCompany(params.get('cid')))\r\n    .subscribe(data => {\r\n      this.employees = data\r\n      this.isPromiseDone = true;\r\n    });\r\n  }\r\n\r\n  updateEmployee(){\r\n    //  this.route.paramMap\r\n    //  .switchMap((params: ParamMap) => this.employeeService.updateCompanyDetails(params.get('id'), this.company))\r\n    //  .subscribe(data => this.company = data);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/employee/employeesList/employeesList.component.ts","module.exports = \"<span>\\r\\n    <input [accept]=\\\"accept\\\" type=\\\"file\\\" (change)=\\\"onNativeInputFileSelect($event)\\\" #inputFile hidden multiple=\\\"multiple\\\" />\\r\\n    <button type=\\\"button\\\" md-raised-button (click)=\\\"selectFile()\\\">\\r\\n        <mat-icon>file_upload</mat-icon>\\r\\n        <ng-content *ngIf=\\\"!fileCount\\\" select=\\\".nofiles\\\"></ng-content>\\r\\n        <span *ngIf=\\\"fileCount\\\">\\r\\n            <span>{{fileCount}}</span>\\r\\n            <ng-content select=\\\".selected\\\"></ng-content>\\r\\n        </span>\\r\\n    </button>\\r\\n</span>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/fileupload.component.html\n// module id = ../../../../../src/app/components/fileupload.component.html\n// module chunks = main","import {Component, Output, EventEmitter, ViewChild, ElementRef, Input} from '@angular/core';\r\n\r\n@Component({\r\n    'moduleId': module.id,\r\n    'selector': 'input-file',\r\n    'templateUrl': './fileupload.component.html'\r\n})\r\nexport class InputFile {\r\n    @Input() accept: string;\r\n    @Output() onFileSelect: EventEmitter<File[]> = new EventEmitter();\r\n\r\n    @ViewChild('inputFile') nativeInputFile: ElementRef;\r\n\r\n    private _files: File[];\r\n\r\n    get fileCount(): number { return this._files && this._files.length || 0; }\r\n\r\n    onNativeInputFileSelect($event) {\r\n        this._files = $event.srcElement.files;\r\n        this.onFileSelect.emit(this._files);\r\n    }\r\n\r\n    selectFile() {\r\n        this.nativeInputFile.nativeElement.click();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/fileupload.component.ts","module.exports = \"<h2 class=\\\"centerText\\\" i18n=\\\"message | a message to let the user know the login failed\\\">\\r\\n    The email and/or password provided could not be authenticated successfully.\\r\\n</h2>\\r\\n<hr/>\\r\\n<div>\\r\\n    <button style=\\\"float:right\\\" md-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\"> Close </button>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/login/login-alert.dialog.html\n// module id = ../../../../../src/app/components/login/login-alert.dialog.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-form {\\r\\n    min-width: 150px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 50%;\\r\\n  }\\r\\n\\r\\n  @media (max-device-width: 720px) {\\r\\n    .loginLogoMobile {\\r\\n       float: unset !important;\\r\\n      \\r\\n    }\\r\\n    .loginTitleMobile {\\r\\n      width:90% !important;\\r\\n      margin: 5%;\\r\\n      margin-left:0 !important;\\r\\n      -webkit-transform:translateY(0) !important;\\r\\n              transform:translateY(0) !important;\\r\\n    }\\r\\n\\r\\n    .loginFormMobile {\\r\\n      float: unset !important;\\r\\n      width: 85%!important;\\r\\n      margin: 5px;\\r\\n     \\r\\n    }\\r\\n\\r\\n    .loginFormFieldsMobile {\\r\\n      width: 30% !important;\\r\\n    }\\r\\n\\r\\n    .loginContainerMobile {\\r\\n      top: 10% !important;\\r\\n    }\\r\\n      \\r\\n   }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div style=\\\"overflow-y: auto; position:absolute;top:25%;width:100%\\\" class=\\\"loginContainerMobile\\\">\\r\\n  <div style=\\\"width:60%; margin-left:35px; transform: translateY(200%)\\\" class=\\\"loginTitleMobile centerText\\\">\\r\\n    <h1> Admin Page</h1>\\r\\n    <img style=\\\"width:90%;\\\" src=\\\"../../assets/images/Nomi_Sign-12-1-1.png\\\" class=\\\"loginLogoMobile leftFloat\\\"/>\\r\\n  </div>\\r\\n  <div>\\r\\n    <mat-card style=\\\"margin-right:50px; width: 34%; text-align: center; float:right\\\" class=\\\"loginFormMobile\\\">\\r\\n      <h1 class=\\\"centerText\\\">\\r\\n        <h2 i18n=\\\"header | header for where the user will enter their login credentials @@LoginFormHeader\\\">Login</h2>\\r\\n      </h1>\\r\\n\\r\\n      <mat-card-content>\\r\\n        <form name=\\\"loginForm\\\" class=\\\"example-form\\\">\\r\\n          <div> \\r\\n          <span i18n=\\\"header | asking for the user's email@@PasswordLoginForm\\\" style=\\\"display:inline-block; width:12%;text-align:left\\\" class=\\\"loginFormFieldsMobile\\\">Email &nbsp;</span>\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" matInput [formControl]=\\\"usernameFormControl\\\" [(ngModel)]=userName>\\r\\n            <mat-error *ngIf=\\\"usernameFormControl.hasError('required')\\\" i18n=\\\"message | letting the user know that they need to enter their username@@UsernameRequiredMessage\\\">\\r\\n              Username is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n          <span i18n=\\\"header | asking for the user's password@@PasswordLoginForm\\\" style=\\\"display:inline-block; width:12%; text-align:left\\\" class=\\\"loginFormFieldsMobile\\\">Password &nbsp;</span>\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"password\\\" matInput [formControl]=\\\"passwordFormControl\\\" [(ngModel)]=\\\"password\\\">\\r\\n            <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\" i18n=\\\"message | letting the user know that they need to enter their password@@PasswordRequiredMessage\\\">\\r\\n              Password is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n      <button md-raised-button color=\\\"primary\\\" style=\\\"width:85%\\\" (click)=login() i18n=\\\"action | user will click this to login to thet website@@LoginButtonAction\\\"> Login </button>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { User } from '../../models/user.model'\r\n\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [ AuthService ]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user = {\r\n    EmailAddress: '',\r\n    PasswordHash: ''\r\n  };\r\n  userName: string\r\n  password: string\r\n\r\n  activeUser: User;\r\n  usernameFormControl = new FormControl('', [\r\n    Validators.required]);\r\n\r\n  passwordFormControl = new FormControl('', [\r\n    Validators.required]);\r\n\r\n\r\n  constructor(private authService: AuthService, private router: Router, private userService: UserService, public dialog: MatDialog) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  reroute(activeUser) {\r\n    this.userService.setUser(activeUser);\r\n    this.router.navigate(['/layout'])\r\n  }\r\n\r\n  login() {\r\n    this.user.EmailAddress = this.userName\r\n    this.user.PasswordHash = this.password\r\n    this.authService.loginUser(this.user).subscribe(\r\n      userData => this.userService.setUser(userData),\r\n      error => {\r\n          let dialogRef = this.dialog.open(LoginAlertDialog, {\r\n          width: '50%',\r\n          data: { }\r\n        })\r\n      ;},\r\n      () =>  {\r\n        \r\n        let user = this.userService.getUser()\r\n        switch(user.UserType){\r\n          case 3: { //global admin\r\n            this.router.navigate(['/dashboard'])\r\n            break;\r\n          } \r\n          case 2: { //company admin\r\n            this.router.navigate(['/companyEdit', user.CompanyId ])\r\n            break;\r\n          }\r\n          case 1: { //HR user\r\n            this.router.navigate(['/employeesList', user.CompanyId])\r\n            break;\r\n          }\r\n          default: { //default case\r\n            this.router.navigate(['/login'])\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'login-alert-dialog',\r\n  templateUrl: 'login-alert.dialog.html',\r\n})\r\nexport class LoginAlertDialog {\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoginAlertDialog>) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar{\\r\\n    background-color: #2cbbc3;\\r\\n    padding: 5px\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/companyAdmin/company-admin.navbar.component.css\n// module id = ../../../../../src/app/components/navbars/companyAdmin/company-admin.navbar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"toolbar\\\">\\r\\n    <!-- mobile menu -->\\r\\n    <span style=\\\"display:none\\\" class=\\\"displayContentMobile\\\">\\r\\n        <button md-button [matMenuTriggerFor]=\\\"mobileMenu\\\">\\r\\n            <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <mat-menu #mobileMenu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"companyMenu\\\" i18n=\\\"@@GoCompaniesPageMenuHeader\\\"> Companies </button>\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"companyuserMenu\\\" i18n=\\\"@@GoCompanyUsersPageMenuHeader\\\"> Users </button>\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"employeeMenu\\\" i18n=\\\"@@GoEmployeesPageMenuHeader\\\"> Employees </button>\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"companyDocumentMenu\\\" i18n=\\\"@@GoCompanyDocumentMenuHeader\\\"> Documents </button>\\r\\n        </mat-menu>\\r\\n        <span style=\\\"float:right\\\" *ngIf=\\\"user\\\">\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                <mat-icon>person</mat-icon>{{user.EmailAddress}}\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n                    <mat-icon>exit_to_app</mat-icon>\\r\\n                    <span i18n=\\\"action | user will click this to log out of the website@@LogoutAction\\\">Logout</span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n        </span>\\r\\n    </span>\\r\\n    <!--desktop menu -->\\r\\n    <div style=\\\"margin-left:12%\\\">\\r\\n        <span class=\\\"hideContentMobile\\\">\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"companyMenu\\\">\\r\\n                <span i18n=\\\"menu header | User will click this to navigate to the companies page@@GoCompaniesPageMenuHeader\\\">\\r\\n                    Companies\\r\\n                </span>\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <mat-menu #companyMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item [routerLink]=\\\"['/companyEdit', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"menu header | User will click this to view their company's details@@CompanyToolbarHeader\\\">\\r\\n                        Company\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"companyuserMenu\\\">\\r\\n                <span i18n=\\\"menu header | User will click this to go to the company user's page@@GoCompanyUsersPageMenuHeader\\\">\\r\\n                    Users\\r\\n                </span>\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #companyuserMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item [routerLink]=\\\"['/companyusers', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@@GoCompanyUsersPageMenuHeader\\\">\\r\\n                        Users\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"employeeMenu\\\">\\r\\n                <span i18n=\\\"menu header | User will click this to go to the employees page@@GoEmployeesPageMenuHeader\\\">\\r\\n                    Employees\\r\\n                </span>\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #employeeMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item [routerLink]=\\\"['/employeesList', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@@GoEmployeesPageMenuHeader\\\">\\r\\n                        Employees\\r\\n                    </span>\\r\\n                </button>\\r\\n                <button mat-menu-item [routerLink]=\\\"['/employeeNew', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"menu header | User will click this to create a new employee@@NewEmployeesPageMenuHeader\\\">\\r\\n                        New Employee\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"companyDocumentMenu\\\">\\r\\n            <span i18n=\\\"menu header | User will click this to go to the documents page@@GoDocumentPageMenuHeader\\\">\\r\\n                Documents\\r\\n            </span>\\r\\n            <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #companyDocumentMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item [routerLink]=\\\"['/documentRejectList/3/', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@@GoCompanyUsersPageMenuHeader\\\">\\r\\n                        Refused\\r\\n                    </span>\\r\\n                </button>\\r\\n                <button mat-menu-item [routerLink]=\\\"['/documentUnapprovedList/1/', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@@GoCompanyUsersPageMenuHeader\\\">\\r\\n                        Unsigned\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <span style=\\\"float:right\\\" *ngIf=\\\"user\\\">\\r\\n                <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                    <mat-icon>person</mat-icon>{{user.EmailAddress}}\\r\\n                    <mat-icon>arrow_drop_down</mat-icon>\\r\\n                </button>\\r\\n                <mat-menu #menu=\\\"matMenu\\\">\\r\\n                    <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n                        <mat-icon>exit_to_app</mat-icon>\\r\\n                        <span i18n=\\\"action | user will click this to log out of the website@@LogoutAction\\\">Logout</span>\\r\\n                    </button>\\r\\n                </mat-menu>\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/companyAdmin/company-admin.navbar.component.html\n// module id = ../../../../../src/app/components/navbars/companyAdmin/company-admin.navbar.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { UserService } from '../../../services/user.service'\r\nimport { SettingsService } from '../../../services/settings.service'\r\n\r\n@Component({\r\n  selector: 'company-admin-navbar',\r\n  templateUrl: './company-admin.navbar.component.html',\r\n  styleUrls: ['./company-admin.navbar.component.css'],\r\n  providers: [SettingsService ]\r\n})\r\nexport class CompanyAdminNavbarComponent implements OnInit {\r\n  title :string;\r\n  url = this.router.url\r\n  appName: string\r\n  user : any\r\n\r\n  constructor(private router: Router, private settingsService: SettingsService, private userService: UserService) {\r\n    settingsService.getSystemSettings().subscribe(data => this.appName = data[0].ProductName)\r\n    this.getCurrentUser()\r\n    userService.userUpdated.subscribe(value => {\r\n      this.getCurrentUser()\r\n    })\r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  getCurrentUser(){\r\n    let user = this.userService.getUser()\r\n    if (user){\r\n      this.user = user;\r\n    }     \r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title\r\n  }\r\n\r\n\r\n  logout(){\r\n    this.userService.clearUser();\r\n    this.user = null;\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/companyAdmin/company-admin.navbar.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar{\\r\\n    background-color: #2cbbc3;\\r\\n    padding: 5px\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/globalAdmin/global-admin.navbar.component.css\n// module id = ../../../../../src/app/components/navbars/globalAdmin/global-admin.navbar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"toolbar\\\">\\r\\n    <!-- mobile menu -->\\r\\n    <span style=\\\"display:none\\\" class=\\\"displayContentMobile\\\">\\r\\n        <button mat-button [matMenuTriggerFor]=\\\"mobileMenu\\\">\\r\\n            <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <mat-menu #mobileMenu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\" i18n=\\\"@@GoHomePageMenuHeader\\\"> Home </button>\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"companyMenu\\\" i18n=\\\"@@GoCompaniesPageMenuHeader\\\"> Companies </button>\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"companyuserMenu\\\" i18n=\\\"@@GoCompanyUsersPageMenuHeader\\\"> Users </button>\\r\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"employeeMenu\\\" i18n=\\\"@@GoEmployeesPageMenuHeader\\\"> Employees </button>\\r\\n            \\r\\n        </mat-menu>\\r\\n        <span style=\\\"float:right\\\" *ngIf=\\\"user\\\">\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                <mat-icon>person</mat-icon>{{user.EmailAddress}}\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n                    <mat-icon>exit_to_app</mat-icon>\\r\\n                    <span i18n=\\\"action | user will click this to log out of the website@@LogoutAction\\\">Logout</span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n        </span>\\r\\n    </span>\\r\\n    <!-- desktop menu -->\\r\\n    <div style=\\\"margin-left:12%\\\">\\r\\n        <span class=\\\"hideContentMobile\\\">\\r\\n            <span>\\r\\n                <button mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"menu header | User will click this to navigate to the home page@@GoHomePageMenuHeader\\\">\\r\\n                        Home\\r\\n                    </span>\\r\\n                </button>\\r\\n            </span>\\r\\n\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"companyMenu\\\">\\r\\n                <span i18n=\\\"menu header | User will click this to navigate to the companies page@@GoCompaniesPageMenuHeader\\\">\\r\\n                    Companies\\r\\n                </span>\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <mat-menu #companyMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item routerLink=\\\"/companies\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@GoCompaniesPageMenuHeader\\\">\\r\\n                        Companies\\r\\n                    </span>\\r\\n                </button>\\r\\n                <button mat-menu-item routerLink=\\\"/companyNew\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"menu header | User will click this to create a new company@@NewCompanyPageHeader\\\">\\r\\n                        New Company\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"companyuserMenu\\\">\\r\\n                <span i18n=\\\"menu header | User will click this to go to the company user's page@@GoCompanyUsersPageMenuHeader\\\">\\r\\n                    Users\\r\\n                </span>\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #companyuserMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item routerLink=\\\"/companyusers\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@@GoCompanyUsersPageMenuHeader\\\">\\r\\n                        Users\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"employeeMenu\\\">\\r\\n                <span i18n=\\\"menu header | User will click this to go to the employees page@@GoEmployeesPageMenuHeader\\\">\\r\\n                    Employees\\r\\n                </span>\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #employeeMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item routerLink=\\\"/employees\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@@GoEmployeesPageMenuHeader\\\">\\r\\n                        Employees\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <span style=\\\"float:right\\\" *ngIf=\\\"user\\\">\\r\\n                <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                    <mat-icon>person</mat-icon>{{user.EmailAddress}}\\r\\n                    <mat-icon>arrow_drop_down</mat-icon>\\r\\n                </button>\\r\\n                <mat-menu #menu=\\\"matMenu\\\">\\r\\n                    <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n                        <mat-icon>exit_to_app</mat-icon>\\r\\n                        <span i18n=\\\"action | user will click this to log out of the website@@LogoutAction\\\">Logout</span>\\r\\n                    </button>\\r\\n                </mat-menu>\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/globalAdmin/global-admin.navbar.component.html\n// module id = ../../../../../src/app/components/navbars/globalAdmin/global-admin.navbar.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { UserService } from '../../../services/user.service'\r\nimport { SettingsService } from '../../../services/settings.service'\r\n\r\n@Component({\r\n  selector: 'global-admin-navbar',\r\n  templateUrl: './global-admin.navbar.component.html',\r\n  styleUrls: ['./global-admin.navbar.component.css'],\r\n  providers: [SettingsService ]\r\n})\r\nexport class GlobalAdminNavbarComponent implements OnInit {\r\n  title :string;\r\n  url = this.router.url\r\n  appName: string\r\n  user : any\r\n\r\n  constructor(private router: Router, private settingsService: SettingsService, private userService: UserService) {\r\n    settingsService.getSystemSettings().subscribe(data => this.appName = data[0].ProductName)\r\n    this.getCurrentUser()\r\n    userService.userUpdated.subscribe(value => {\r\n      this.getCurrentUser()\r\n    })\r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  getCurrentUser(){\r\n    let user = this.userService.getUser()\r\n    if (user){\r\n      this.user = user;\r\n    }     \r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title\r\n  }\r\n\r\n\r\n  logout(){\r\n    this.userService.clearUser();\r\n    this.user = null;\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/globalAdmin/global-admin.navbar.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar{\\r\\n    background-color: #2cbbc3;\\r\\n    padding: 5px\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/user/user.navbar.component.css\n// module id = ../../../../../src/app/components/navbars/user/user.navbar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"toolbar\\\">\\r\\n    <!--mobile menu -->\\r\\n<span style=\\\"display:none\\\" class=\\\"displayContentMobile\\\">\\r\\n    <button mat-button [matMenuTriggerFor]=\\\"employeeMenu\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <span style=\\\"float:right\\\" *ngIf=\\\"user\\\">\\r\\n        <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <mat-icon>person</mat-icon>{{user.EmailAddress}}\\r\\n            <mat-icon>arrow_drop_down</mat-icon>\\r\\n        </button>\\r\\n        <mat-menu #menu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n                <mat-icon>exit_to_app</mat-icon>\\r\\n                <span i18n=\\\"action | user will click this to log out of the website@@LogoutAction\\\">Logout</span>\\r\\n            </button>\\r\\n        </mat-menu>\\r\\n    </span>\\r\\n</span>\\r\\n\\r\\n<!--desktop menu -->\\r\\n    <div style=\\\"margin-left:12%\\\">\\r\\n        <span class=\\\"hideContentMobile\\\">\\r\\n\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"employeeMenu\\\">\\r\\n                <span i18n=\\\"menu header | User will click this to go to the employees page@@GoEmployeesPageMenuHeader\\\">\\r\\n                    Employees\\r\\n                </span>\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #employeeMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item [routerLink]=\\\"['/employeesList', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@@GoEmployeesPageMenuHeader\\\">\\r\\n                        Employees\\r\\n                    </span>\\r\\n                </button>\\r\\n                <button mat-menu-item [routerLink]=\\\"['/employeeNew', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"menu header | User will click this to create a new employee@@NewEmployeesPageMenuHeader\\\">\\r\\n                        New Employee\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n            <mat-menu #companyDocumentMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item [routerLink]=\\\"['/companyusers', user.CompanyId]\\\" routerLinkActive=\\\"active\\\">\\r\\n                    <span i18n=\\\"@@GoCompanyUsersPageMenuHeader\\\">\\r\\n                        Documents\\r\\n                    </span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <span style=\\\"float:right\\\" *ngIf=\\\"user\\\">\\r\\n                <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                    <mat-icon>person</mat-icon>{{user.EmailAddress}}\\r\\n                    <mat-icon>arrow_drop_down</mat-icon>\\r\\n                </button>\\r\\n                <mat-menu #menu=\\\"matMenu\\\">\\r\\n                    <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n                        <mat-icon>exit_to_app</mat-icon>\\r\\n                        <span i18n=\\\"action | user will click this to log out of the website@@LogoutAction\\\">Logout</span>\\r\\n                    </button>\\r\\n                </mat-menu>\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/user/user.navbar.component.html\n// module id = ../../../../../src/app/components/navbars/user/user.navbar.component.html\n// module chunks = main","//angular imports\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { UserService } from '../../../services/user.service'\r\nimport { SettingsService } from '../../../services/settings.service'\r\n\r\n@Component({\r\n  selector: 'user-navbar',\r\n  templateUrl: './user.navbar.component.html',\r\n  styleUrls: ['./user.navbar.component.css'],\r\n  providers: [SettingsService ]\r\n})\r\nexport class UserNavbarComponent implements OnInit {\r\n  title :string;\r\n  url = this.router.url\r\n  appName: string\r\n  user : any\r\n\r\n  constructor(private router: Router, private settingsService: SettingsService, private userService: UserService) {\r\n    settingsService.getSystemSettings().subscribe(data => this.appName = data[0].ProductName)\r\n    this.getCurrentUser()\r\n    userService.userUpdated.subscribe(value => {\r\n      this.getCurrentUser()\r\n    })\r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  getCurrentUser(){\r\n    let user = this.userService.getUser()\r\n    if (user){\r\n      this.user = user;\r\n    }     \r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title\r\n  }\r\n\r\n\r\n  logout(){\r\n    this.userService.clearUser();\r\n    this.user = null;\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/navbars/user/user.navbar.component.ts","module.exports = \"<div i18n=\\\"Message | Message letting the user know the page they navigated to does not exist@@PageNotFoundMessage\\\"> The page you requested was not found. </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/notfound/notfound.component.html\n// module id = ../../../../../src/app/components/notfound/notfound.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ng-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  //styleUrls: ['./notfound.component.css']\r\n})\r\nexport class NotFoundComponent {\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/notfound/notfound.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/timesheet/timesheet.component.css\n// module id = ../../../../../src/app/components/timesheet/timesheet.component.css\n// module chunks = main","module.exports = \"This is the time sheet component\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/timesheet/timesheet.component.html\n// module id = ../../../../../src/app/components/timesheet/timesheet.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ng-timesheet',\r\n  templateUrl: './timesheet.component.html',\r\n  styleUrls: ['./timesheet.component.css']\r\n})\r\nexport class TimesheetComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/components/timesheet/timesheet.component.ts","export class CompanyModel {\r\n    DocumentStoragePath2: string;\r\n    DocumentStoragePath1:string;\r\n    DaysAccountPastDue:number;\r\n    LastInvoiceDate:Date;\r\n    AccountStatus:number;\r\n    NumberSignaturesRemaining:number;\r\n    NumberSignaturesPurchasedLifetime:number;\r\n    CorporateEmailDomain:string;\r\n    BillingEmailAddress:string;\r\n    PayPeriod:number;\r\n    EmployeeCount:number;\r\n    CompanyRFC:string;\r\n    PostalCode:string;\r\n    State:string;\r\n    City:string;\r\n    Address1:string;\r\n    Address2:string;\r\n    CompanyName:string;\r\n    CompanyID:number;\r\n    Links: {\r\n        SelfUri: string;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/company.model.ts","export class CompanyUserModel {\r\n    UserId: number;\r\n    EmailAddress:string;\r\n    DisplayName:string;\r\n    PhoneNumber:string;\r\n    PasswordHash:string;\r\n    //UserStatus: number;\r\n    UserType: number;\r\n    LastLogin:string;\r\n    LastPasswordChange:Date;\r\n    ForcePasswordReset: boolean;\r\n    CreatedByUserName: string;\r\n    CompanyId: number;\r\n    CreatedByUserId: number;\r\n    Links:{\r\n        SelfUri: string\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/companyUser.model.ts","export class FileModel {\r\n    FileName: string;\r\n    Content:any;\r\n    EmployeeCURP: string;\r\n    //CompanyId: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/file.model.ts","export class States {\r\n    public codes\r\n    constructor(){\r\n       this.codes= [\"AL\",\"AK\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"FL\",\"GA\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\r\n        \"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"OH\",\"OK\",\"OR\",\"PA\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\"\r\n        ]\r\n      \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/states.models.ts","export class User {\r\n    //EmployeeId: number;\r\n    UserId: number;\r\n    CompanyId: number;\r\n    FirstName: string;\r\n    LastName1: string;\r\n    LastName2: string;\r\n    CURP: string;\r\n    RFC: string;\r\n    CreatedByUserId: number;\r\n    //PasswordHash: string;\r\n    EmailAddress: string;\r\n    Links: {\r\n        SelfUri: string\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/user.model.ts","export class UserType {\r\n    public codes\r\n    constructor() {\r\n        this.codes = [\"HumanResources\", \"CompanyAdmin\", \"GlobalAdmin\"]\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/models/usertype.models.ts","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n name: 'listfilter'\r\n})\r\n\r\n@Injectable()\r\nexport class ListFilterPipe implements PipeTransform {\r\n transform(items: any[], criteria: any): any[] {\r\n     return items.filter(item =>{\r\n        for (let key in item ) {\r\n            let lowerKey = \"\"+item[key]\r\n          if(lowerKey.toLowerCase().includes(criteria.toLowerCase())){\r\n             return true;\r\n          }\r\n        }\r\n        return false;\r\n     });\r\n }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/pipes/list-filter.pipe.ts","//angular imports\r\nimport { Injectable } from '@angular/core';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\n//rxjs imports\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst rootURL: string = environment.serviceUrl;\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(private http: Http) {}\r\n\r\n    loginUser(user): Observable<any> {\r\n        let _headers = new Headers ({'Content-Type': 'application/json'})\r\n        let options = new RequestOptions({method: 'POST', headers: _headers})\r\n        let url = rootURL + 'api/adminlogin';\r\n        let body = JSON.stringify(user)\r\n        return this.http.post(url, body, options).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from './user.service'\r\n\r\n@Injectable()\r\nexport class CAdminAuthGuard {\r\n\r\n  constructor( private userService : UserService, private router : Router ) {\r\n  }\r\n\r\n  canActivate( route : ActivatedRouteSnapshot, state : RouterStateSnapshot ) {\r\n    if (this.userService.isLoggedIn()){\r\n      let user = this.userService.getUser();\r\n\r\n      if (user.UserType === 3){\r\n        return true;\r\n      }\r\n\r\n      if (user.UserType === 2){\r\n          if (user.CompanyId === +route.params.cid){\r\n            return true;\r\n          }\r\n        }\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    } \r\n    this.router.navigate(['/notFound']);\r\n    return false;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class UserAuthGuard {\r\n\r\n  constructor( private userService : UserService, private router : Router ) {\r\n  }\r\n\r\n  canActivate( route : ActivatedRouteSnapshot, state : RouterStateSnapshot ) {\r\n    if (this.userService.isLoggedIn()) {\r\n      let user = this.userService.getUser();\r\n\r\n      if (user.UserType === 3){\r\n        return true;\r\n      }\r\n\r\n      if (user.UserType === 1 || user.UserType === 2){\r\n        if (user.CompanyId === +route.params.cid){\r\n          return true;\r\n        }\r\n      }\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n    this.router.navigate(['/notFound']);\r\n    return false;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class GAdminAuthGuard {\r\n\r\n  constructor( private userService : UserService, private router : Router ) {\r\n  }\r\n\r\n  canActivate( route : ActivatedRouteSnapshot, state : RouterStateSnapshot ) {\r\n    if (this.userService.isLoggedIn()){\r\n       if (this.userService.getUserType() === 3){\r\n         return true;\r\n       }\r\n       console.log(this.userService.getUserType())\r\n    } \r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/authguard.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable }     from 'rxjs/Observable';\r\n\r\nimport { CompanyModel } from '../models/company.model'\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\n//const rootURL: string = 'http://ogrean.com/nomisign/'\r\nconst rootURL: string = environment.serviceUrl;\r\n\r\n\r\n@Injectable()\r\nexport class CompanyService {\r\n    \r\n    constructor( private http: Http ) {}\r\n    //GET\r\n    getCompanies(): Observable<CompanyModel[]>{\r\n        var _headers = new Headers ({})\r\n        return this.http.get(rootURL + 'api/companies', {headers: _headers}).map(response => response.json());\r\n    }\r\n    //GET/:id\r\n    getCompanyById(companyId: string): Observable<CompanyModel>{\r\n        var _headers = new Headers ({})\r\n        return this.http.get(rootURL + 'api/companies/' + companyId, {headers: _headers}).map(response => response.json());\r\n    }\r\n    //PUT\r\n    updateCompanyDetails(companyId: string, companyDetails: CompanyModel): Observable<CompanyModel>{\r\n        var _headers = new Headers ({'Content-Type': 'application/json'})\r\n        var options = new RequestOptions({method: 'PUT', headers: _headers})\r\n        var body = JSON.stringify(companyDetails);\r\n        var url = rootURL + 'api/companies/' + companyId\r\n        return this.http.put(url, body, options).map(response => response.json());\r\n    }\r\n    //POST\r\n    saveNewCompany(companyDetails : CompanyModel) : Observable<CompanyModel>{\r\n         var _headers = new Headers({ 'Content-Type': 'application/json' })\r\n         var options = new RequestOptions({method: 'POST', headers: _headers})\r\n         var body = JSON.stringify(companyDetails);\r\n         console.log(companyDetails)\r\n         let url = rootURL + \"api/companies\";\r\n        return this.http.post(url, body, options).map(response => response.json());\r\n    }    \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/company.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable }     from 'rxjs/Observable';\r\n\r\nimport { CompanyUserModel } from '../models/companyUser.model'\r\nimport { User } from '../models/user.model'\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport { environment } from '../../environments/environment';\r\n\r\n//const rootURL: string = 'http://ogrean.com/nomisign/'\r\nconst rootURL: string = environment.serviceUrl;\r\n\r\n@Injectable()\r\nexport class CompanyUsersService {\r\n    \r\n    constructor( private http: Http ) {}\r\n   \r\n    //GET/:cid\r\n    getCompanyUsersByCompany(companyId: string): Observable<any>{\r\n        var _headers = new Headers ({})\r\n        return this.http.get(rootURL + 'api/companyusers/' + companyId, {headers: _headers}).map(response => response.json());\r\n    }\r\n    //GET/:cid/:eid\r\n    getCompanyUserById(companyId: string, companyUserId: string): Observable<any>{\r\n        var _headers = new Headers ({})\r\n        return this.http.get(rootURL + 'api/companyusers/' + companyId + '/' + companyUserId, {headers: _headers}).map(response => response.json());\r\n    }\r\n    //PUT\r\n    updateCompanyUserDetails(companyUserId: string, companyUser: CompanyUserModel): Observable<any>{\r\n        var _headers = new Headers ({'Content-Type': 'application/json'})\r\n        var options = new RequestOptions({method: 'PUT', headers: _headers})\r\n        var body = JSON.stringify(companyUser);\r\n        var url = rootURL + 'api/companyusers/' + companyUserId \r\n        return this.http.put(url, body, options).map(response => response.json());\r\n    }\r\n    //POST\r\n    saveNewCompanyUser(companyUser: CompanyUserModel): Observable<any>{\r\n        var _headers = new Headers ({'Content-Type': 'application/json'})\r\n        var options = new RequestOptions({method: 'POST', headers: _headers})\r\n        var body = JSON.stringify(companyUser);\r\n        console.log(companyUser)\r\n        var url = rootURL + 'api/companyusers'\r\n        return this.http.post(url, body, options).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/companyUser.service.ts","//angular imports\r\nimport { Injectable } from '@angular/core';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\n//rxjs imports\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst rootURL: string = environment.serviceUrl;\r\n\r\n@Injectable()\r\nexport class DocumentService {\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getRejectedDocumentsForCompany(companyId): Observable<any> {\r\n        let _headers = new Headers({})\r\n        let options = new RequestOptions({ method: 'GET', headers: _headers })\r\n        let url = rootURL + 'api/documents/rejected/' + companyId;\r\n\r\n        return this.http.get(url, options).map(response => response.json());\r\n    }\r\n\r\n    getUnsignedDocumentsForCompany(companyId): Observable<any> {\r\n        let _headers = new Headers({})\r\n        let options = new RequestOptions({ method: 'GET', headers: _headers })\r\n        let url = rootURL + 'api/documents/unsigned/' + companyId;\r\n\r\n        return this.http.get(url, options).map(response => response.json());\r\n    }\r\n\r\n    //updateDocument(userId, document): Observable<any> {\r\n    //    let _headers = new Headers({ 'Content-Type': 'application/json' })\r\n    //    let options = new RequestOptions({ method: 'PUT', headers: _headers })\r\n    //    let url = rootURL + 'api/documents/' + document.DocumentId;\r\n    //    let body = JSON.stringify(document);\r\n\r\n    //    return this.http.put(url, body, options).map(response => response.json());\r\n    //}\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/documents.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable }     from 'rxjs/Observable';\r\n\r\nimport { EmployeeModel } from '../models/employee.model'\r\nimport { User } from '../models/user.model'\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport { environment } from '../../environments/environment';\r\n\r\n//const rootURL: string = 'http://ogrean.com/nomisign/'\r\n const rootURL: string = environment.serviceUrl;\r\n\r\n@Injectable()\r\nexport class EmployeeService {\r\n    \r\n    constructor( private http: Http ) {}\r\n   \r\n    //GET/:cid\r\n    getEmployeesByCompany(companyId: string): Observable<any>{\r\n        var _headers = new Headers ({})\r\n        return this.http.get(rootURL + 'api/employees/' + companyId, {headers: _headers}).map(response => response.json());\r\n    }\r\n    //GET/:cid/:eid\r\n    getEmployeeById(companyId: string, employeeId: string): Observable<any>{\r\n        var _headers = new Headers ({})\r\n        return this.http.get(rootURL + 'api/employees/' + companyId + '/' + employeeId, {headers: _headers}).map(response => response.json());\r\n    }\r\n    //PUT\r\n    updateEmployeeDetails(employeeId: string, employee: EmployeeModel): Observable<any>{\r\n        var _headers = new Headers ({'Content-Type': 'application/json'})\r\n        var options = new RequestOptions({method: 'PUT', headers: _headers})\r\n        var body = JSON.stringify(employee);\r\n        var url = rootURL + 'api/employees/' + employeeId \r\n        return this.http.put(url, body, options).map(response => response.json());\r\n    }\r\n    //POST\r\n    saveNewEmployee(employee: User): Observable<any>{\r\n        var _headers = new Headers ({'Content-Type': 'application/json'})\r\n        var options = new RequestOptions({method: 'POST', headers: _headers})\r\n        var body = JSON.stringify(employee);\r\n        console.log(employee)\r\n        var url = rootURL + 'api/employees/'\r\n        return this.http.post(url, body, options).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/employee.service.ts","//angular imports\r\nimport { Injectable } from '@angular/core';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\n//rxjs imports\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n    //private rootURL: string = 'http://ogrean.com/nomisign/'\r\n    private rootURL: string = environment.serviceUrl;\r\n\r\n    constructor(private http: Http) {}\r\n    //GET\r\n    getSystemSettings(): Observable<any> {\r\n        let _headers = new Headers ({ })\r\n        let options = new RequestOptions({method: 'GET', headers: _headers})\r\n        let url = this.rootURL + 'api/systemsettings';\r\n\r\n        return this.http.get(url, options).map(response => response.json());\r\n    }\r\n\r\n    //PUT\r\n    updateSystemSettings(settings): Observable<any>{\r\n        var _headers = new Headers ({'Content-Type': 'application/json'})\r\n        var options = new RequestOptions({method: 'PUT', headers: _headers})\r\n        let url = this.rootURL + 'api/systemsettings';\r\n        let body = JSON.stringify(settings)\r\n        return this.http.put(url, settings, options).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/settings.service.ts","//angular imports\r\nimport { Injectable } from '@angular/core';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\n//rxjs imports\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n    //private rootURL: string = 'http://ogrean.com/nomisign/'\r\n    private rootURL: string = environment.serviceUrl;\r\n\r\n    constructor(private http: Http) {}\r\n\r\n    openBatch(rfcCode): Observable<any> {\r\n        let _headers = new Headers ({'Content-Type': 'application/json'})\r\n        let options = new RequestOptions({method: 'POST', headers: _headers})\r\n        let url = this.rootURL + 'api/upload/openbatch/' + rfcCode;\r\n        \r\n        return this.http.post(url, {}, options).map(response => response.json());\r\n    }\r\n\r\n    addFile(file, batchId): Observable<any> {\r\n        let _headers = new Headers ({'Content-Type': 'application/json'})\r\n        let options = new RequestOptions({method: 'POST', headers: _headers})\r\n        let url = this.rootURL + 'api/upload/addfile/' + batchId;\r\n        let body = JSON.stringify(file);\r\n        return this.http.post(url, body, options).map(response => response); //unexpected end of JSON\r\n    }\r\n\r\n    closeBatch(batchId): Observable<any> {\r\n        let _headers = new Headers ({'Content-Type': 'application/json'})\r\n        let options = new RequestOptions({method: 'POST', headers: _headers})\r\n        let url = this.rootURL + 'api/upload/closebatch/' + batchId;\r\n        \r\n        return this.http.post(url, {}, options).map(response => response); //unexpected end of JSON\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/upload.service.ts","import { Injectable, EventEmitter, Output } from '@angular/core';\r\n\r\nimport { User } from '../models/user.model'\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    public userUpdated: EventEmitter<any> = new EventEmitter()\r\n\r\n    public setUser( user: User) {       \r\n        this._user = user\r\n        sessionStorage.setItem('user', JSON.stringify(user))\r\n        this.userUpdated.emit(null)        \r\n    }\r\n\r\n    public getUser (): any{\r\n        if (this._user == null){\r\n            return JSON.parse(sessionStorage.getItem('user'))\r\n        }\r\n        return this._user\r\n    }\r\n\r\n    public isLoggedIn(): boolean{\r\n        if (this._user != null || sessionStorage.getItem('user') != null){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public getUserType(): number {\r\n        let currentUser = this.getUser()\r\n        if (currentUser != null){\r\n            return currentUser.UserType\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public clearUser(){\r\n        sessionStorage.clear()\r\n        this._user= null\r\n        this.userUpdated.emit(null)\r\n    }\r\n\r\n    private _user : User \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n    production: true,\r\n    serviceUrl: \"http://18.216.139.244/nomiadmin/\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Teddy/source/repos/NomiSignFrontEnd_Admin/src/main.ts"],"sourceRoot":"webpack:///"}